{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Work/2023/training/apps/frontend/src/components/require-unauthorized/require-unauthorized.component.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n\nconst RequireUnauthorized = ({\n  children\n}) => {\n  _s();\n\n  const isAuthenticated = useSelector(state => state.authReducer.isAuthenticated);\n\n  if (isAuthenticated) {\n    return _jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n\n  return children;\n};\n\n_s(RequireUnauthorized, \"Tis/laFBs1mUsdamrhCn/+4kssg=\", false, function () {\n  return [useSelector];\n});\n\n_c = RequireUnauthorized;\nexport default RequireUnauthorized;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequireUnauthorized\");","map":{"version":3,"sources":["/home/user/Документы/Work/2023/training/apps/frontend/src/components/require-unauthorized/require-unauthorized.component.tsx"],"names":["React","Navigate","useSelector","RequireUnauthorized","children","isAuthenticated","state","authReducer"],"mappings":";;;AAAA,OAAOA,KAAP,MAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAKA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA2D;AAAA;;AACrF,QAAMC,eAAe,GAAGH,WAAW,CAChCI,KAAD,IAAsBA,KAAK,CAACC,WAAN,CAAkBF,eADP,CAAnC;;AAIA,MAAIA,eAAJ,EAAqB;AACnB,WAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAiB,MAAA,OAAO;AAAxB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,SAAOD,QAAP;AACD,CAVD;;GAAMD,mB;UACoBD,W;;;KADpBC,mB;AAYN,eAAeA,mBAAf","sourcesContent":["import React, { ReactElement } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { observer } from 'mobx-react-lite';\nimport type { RootState } from '@boilerplate/store';\n\n\nconst RequireUnauthorized = ({ children }: { children: JSX.Element }): ReactElement => {  \n  const isAuthenticated = useSelector(\n    (state: RootState) => state.authReducer.isAuthenticated\n  );\n\n  if (isAuthenticated) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return children;\n};\n\nexport default RequireUnauthorized;\n"]},"metadata":{},"sourceType":"module"}