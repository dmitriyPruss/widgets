{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Work/2023/training/apps/frontend/src/components/table-pagination-actions/table-pagination-actions.component.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport { Box, IconButton } from '@mui/material';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport { KeyboardArrowLeft, KeyboardArrowRight } from '@mui/icons-material';\nimport { useTheme } from '@mui/material/styles';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n\nconst TablePaginationActions = ({\n  count,\n  page,\n  rowsPerPage,\n  onPageChange\n}) => {\n  _s();\n\n  const theme = useTheme();\n  const handleFirstPageButtonClick = useCallback(event => {\n    onPageChange(event, 0);\n  }, [onPageChange]);\n  const handleBackButtonClick = useCallback(event => {\n    onPageChange(event, page - 1);\n  }, [page, onPageChange]);\n  const handleNextButtonClick = useCallback(event => {\n    onPageChange(event, page + 1);\n  }, [page, onPageChange]);\n  const handleLastPageButtonClick = useCallback(event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }, [count, rowsPerPage, onPageChange]);\n  return _jsxDEV(Box, {\n    sx: {\n      flexShrink: 0,\n      ml: 2.5\n    },\n    children: [_jsxDEV(IconButton, {\n      onClick: handleFirstPageButtonClick,\n      disabled: page === 0,\n      \"aria-label\": \"first page\",\n      children: theme.direction === 'rtl' ? _jsxDEV(LastPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }, this) : _jsxDEV(FirstPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 52\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), _jsxDEV(IconButton, {\n      onClick: handleBackButtonClick,\n      disabled: page === 0,\n      \"aria-label\": \"previous page\",\n      children: theme.direction === 'rtl' ? _jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }, this) : _jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 58\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this), _jsxDEV(IconButton, {\n      onClick: handleNextButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": \"next page\",\n      children: theme.direction === 'rtl' ? _jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 33\n      }, this) : _jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 57\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this), _jsxDEV(IconButton, {\n      onClick: handleLastPageButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": \"last page\",\n      children: theme.direction === 'rtl' ? _jsxDEV(FirstPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }, this) : _jsxDEV(LastPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 53\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 2\n  }, this);\n};\n\n_s(TablePaginationActions, \"+WPdi87rT0G0LcZo5bo991x7GS0=\", false, function () {\n  return [useTheme];\n});\n\n_c = TablePaginationActions;\nexport default TablePaginationActions;\n\nvar _c;\n\n$RefreshReg$(_c, \"TablePaginationActions\");","map":{"version":3,"sources":["/home/user/Документы/Work/2023/training/apps/frontend/src/components/table-pagination-actions/table-pagination-actions.component.tsx"],"names":["React","useCallback","Box","IconButton","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","useTheme","LastPageIcon","TablePaginationActions","count","page","rowsPerPage","onPageChange","theme","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","flexShrink","ml","direction"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport { Box,IconButton } from '@mui/material';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport { KeyboardArrowLeft, KeyboardArrowRight } from '@mui/icons-material';\nimport { useTheme } from '@mui/material/styles';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport { EmotionJSX } from '@emotion/react/types/jsx-namespace';\nimport { TablePaginationActionsProps } from './table-pagination-actions.types';\n\n\nconst TablePaginationActions = (\n  { count, \n    page, \n    rowsPerPage, \n    onPageChange \n  }: TablePaginationActionsProps\n): EmotionJSX.Element => {\n  const theme = useTheme();\n\n  const handleFirstPageButtonClick = useCallback((event: React.MouseEvent<HTMLButtonElement>) => {\n\t  onPageChange(event, 0);\n  }, [onPageChange]);\n\n  const handleBackButtonClick = useCallback((event: React.MouseEvent<HTMLButtonElement>) => {\n\t  onPageChange(event, page - 1);\n  }, [page, onPageChange]);\n\n  const handleNextButtonClick = useCallback((event: React.MouseEvent<HTMLButtonElement>) => {\n\t  onPageChange(event, page + 1);\n  }, [page, onPageChange]);\n\n  const handleLastPageButtonClick = useCallback((event: React.MouseEvent<HTMLButtonElement>) => {\n\t  onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }, [count, rowsPerPage, onPageChange]);\n\n  return (\n\t<Box sx={{ flexShrink: 0, ml: 2.5 }}>\n\t  <IconButton \n        onClick={ handleFirstPageButtonClick } \n        disabled={ page === 0 } \n        aria-label=\"first page\"\n      >\n\t\t{ theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon /> }\n\t  </IconButton>\n\t  <IconButton \n        onClick={ handleBackButtonClick } \n        disabled={ page === 0 } \n        aria-label=\"previous page\"\n      >\n\t\t{ theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft /> }\n\t  </IconButton>\n\t  <IconButton\n\t\tonClick={ handleNextButtonClick }\n\t\tdisabled={ page >= Math.ceil(count / rowsPerPage) - 1 }\n\t\taria-label=\"next page\"\n\t  >\n\t\t{ theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight /> }\n\t  </IconButton>\n\t  <IconButton\n\t\tonClick={ handleLastPageButtonClick }\n\t    disabled={ page >= Math.ceil(count / rowsPerPage) - 1 }\n\t\taria-label=\"last page\"\n\t  >\n\t\t{ theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon /> }\n\t  </IconButton>\n\t</Box>\n  );\n}\n\nexport default TablePaginationActions;"]},"metadata":{},"sourceType":"module"}