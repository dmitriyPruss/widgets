{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Work/2023/training/apps/frontend/src/root.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { Suspense } from 'react';\nimport { Navigate, useRoutes } from 'react-router-dom';\nimport NotFoundPage from './pages/not-found/not-found.page';\nimport AuthorizedPage from './pages/authorized-page/authorized.page';\nimport RequireAuth from './components/require-auth/require-auth.component';\nimport RequireUnauthorized from './components/require-unauthorized/require-unauthorized.component';\nimport RouterSuspense from './components/router-suspense/router-suspense.component';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nconst AuthorizedArea = /*#__PURE__*/React.lazy(_c = async () => import('./areas/authorized-area.component'));\n_c2 = AuthorizedArea;\nconst UnauthorizedArea = /*#__PURE__*/React.lazy(_c3 = async () => import('./areas/unauthorized-area.component'));\n_c4 = UnauthorizedArea;\nconst LoginPage = /*#__PURE__*/React.lazy(_c5 = async () => import('./pages/login/login.page'));\n_c6 = LoginPage;\nconst SignUpPage = /*#__PURE__*/React.lazy(_c7 = async () => import('./pages/signup/signup.page'));\n_c8 = SignUpPage;\nconst ChannelPage = /*#__PURE__*/React.lazy(_c9 = async () => import('./pages/channel/channel.page'));\n_c10 = ChannelPage;\n\nconst Root = () => {\n  _s();\n\n  const routes = useRoutes([{\n    path: '/',\n    element: _jsxDEV(RequireAuth, {\n      children: _jsxDEV(AuthorizedArea, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this),\n    children: [// temporary link for admin route\n    {\n      index: true,\n      element: _jsxDEV(Navigate, {\n        to: \"admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 33\n      }, this)\n    }, {\n      path: 'admin',\n      children: [{\n        index: true,\n        element: _jsxDEV(AuthorizedPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 37\n        }, this)\n      }, {\n        path: 'stream/:id',\n        element: _jsxDEV(ChannelPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 44\n        }, this)\n      }]\n    }]\n  }, {\n    element: _jsxDEV(RequireUnauthorized, {\n      children: _jsxDEV(UnauthorizedArea, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this),\n    children: [{\n      path: '/login',\n      element: _jsxDEV(LoginPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 36\n      }, this)\n    }, {\n      path: '/signup',\n      element: _jsxDEV(SignUpPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 37\n      }, this)\n    }]\n  }, {\n    path: '*',\n    element: _jsxDEV(NotFoundPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 27\n    }, this)\n  }]);\n  return _jsxDEV(Suspense, {\n    fallback: _jsxDEV(RouterSuspense, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }, this),\n    children: routes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Root, \"kLP0voP1siobFS2GEj+wjTJmIrs=\", false, function () {\n  return [useRoutes];\n});\n\n_c11 = Root;\nexport default Root;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"AuthorizedArea$React.lazy\");\n$RefreshReg$(_c2, \"AuthorizedArea\");\n$RefreshReg$(_c3, \"UnauthorizedArea$React.lazy\");\n$RefreshReg$(_c4, \"UnauthorizedArea\");\n$RefreshReg$(_c5, \"LoginPage$React.lazy\");\n$RefreshReg$(_c6, \"LoginPage\");\n$RefreshReg$(_c7, \"SignUpPage$React.lazy\");\n$RefreshReg$(_c8, \"SignUpPage\");\n$RefreshReg$(_c9, \"ChannelPage$React.lazy\");\n$RefreshReg$(_c10, \"ChannelPage\");\n$RefreshReg$(_c11, \"Root\");","map":{"version":3,"sources":["/home/user/Документы/Work/2023/training/apps/frontend/src/root.tsx"],"names":["React","Suspense","Navigate","useRoutes","NotFoundPage","AuthorizedPage","RequireAuth","RequireUnauthorized","RouterSuspense","AuthorizedArea","lazy","UnauthorizedArea","LoginPage","SignUpPage","ChannelPage","Root","routes","path","element","children","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,kBAApC;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,cAAP,MAA2B,yCAA3B;AACA,OAAOC,WAAP,MAAwB,kDAAxB;AACA,OAAOC,mBAAP,MAAgC,kEAAhC;AACA,OAAOC,cAAP,MAA2B,wDAA3B;;AAEA,MAAMC,cAAc,gBAAGT,KAAK,CAACU,IAAN,MAAW,YAAY,OAAO,mCAAP,CAAvB,CAAvB;MAAMD,c;AACN,MAAME,gBAAgB,gBAAGX,KAAK,CAACU,IAAN,OAAW,YAAY,OAAO,qCAAP,CAAvB,CAAzB;MAAMC,gB;AACN,MAAMC,SAAS,gBAAGZ,KAAK,CAACU,IAAN,OAAW,YAAY,OAAO,0BAAP,CAAvB,CAAlB;MAAME,S;AACN,MAAMC,UAAU,gBAAGb,KAAK,CAACU,IAAN,OAAW,YAAY,OAAO,4BAAP,CAAvB,CAAnB;MAAMG,U;AACN,MAAMC,WAAW,gBAAGd,KAAK,CAACU,IAAN,OAAW,YAAY,OAAO,8BAAP,CAAvB,CAApB;OAAMI,W;;AAGN,MAAMC,IAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,MAAM,GAAGb,SAAS,CAAC,CACvB;AACEc,IAAAA,IAAI,EAAE,GADR;AAEEC,IAAAA,OAAO,EAAE,QAAC,WAAD;AAAA,gBAAa,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA,YAFX;AAGEC,IAAAA,QAAQ,EAAE,CACR;AACA;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeF,MAAAA,OAAO,EAAE,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAAxB,KAFQ,EAGR;AACED,MAAAA,IAAI,EAAE,OADR;AAEEE,MAAAA,QAAQ,EAAE,CACR;AAAEC,QAAAA,KAAK,EAAE,IAAT;AAAeF,QAAAA,OAAO,EAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAxB,OADQ,EAER;AAAED,QAAAA,IAAI,EAAE,YAAR;AAAsBC,QAAAA,OAAO,EAAE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAA/B,OAFQ;AAFZ,KAHQ;AAHZ,GADuB,EAgBvB;AACEA,IAAAA,OAAO,EAAE,QAAC,mBAAD;AAAA,gBAAqB,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAArB;AAAA;AAAA;AAAA;AAAA,YADX;AAEEC,IAAAA,QAAQ,EAAE,CACR;AAAEF,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,OAAO,EAAE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAA3B,KADQ,EAER;AAAED,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,OAAO,EAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAA5B,KAFQ;AAFZ,GAhBuB,EAuBvB;AAAED,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,OAAO,EAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAtB,GAvBuB,CAAD,CAAxB;AA0BA,SACE,QAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAApB;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhCD;;GAAMD,I;UACWZ,S;;;OADXY,I;AAkCN,eAAeA,IAAf","sourcesContent":["import React, { FC, Suspense } from 'react';\nimport { Navigate, useRoutes } from 'react-router-dom';\nimport NotFoundPage from './pages/not-found/not-found.page';\nimport AuthorizedPage from './pages/authorized-page/authorized.page';\nimport RequireAuth from './components/require-auth/require-auth.component';\nimport RequireUnauthorized from './components/require-unauthorized/require-unauthorized.component';\nimport RouterSuspense from './components/router-suspense/router-suspense.component';\n\nconst AuthorizedArea = React.lazy(async () => import('./areas/authorized-area.component'));\nconst UnauthorizedArea = React.lazy(async () => import('./areas/unauthorized-area.component'));\nconst LoginPage = React.lazy(async () => import('./pages/login/login.page'));\nconst SignUpPage = React.lazy(async () => import('./pages/signup/signup.page'));\nconst ChannelPage = React.lazy(async () => import('./pages/channel/channel.page'));\n\n\nconst Root: FC = () => {\n  const routes = useRoutes([\n    {\n      path: '/',\n      element: <RequireAuth><AuthorizedArea /></RequireAuth>,\n      children: [\n        // temporary link for admin route\n        { index: true, element: <Navigate to='admin' /> },\n        { \n          path: 'admin', \n          children: [\n            { index: true, element: <AuthorizedPage /> },\n            { path: 'stream/:id', element: <ChannelPage /> }\n          ] \n        }\n      ]\n    },\n    {\n      element: <RequireUnauthorized><UnauthorizedArea /></RequireUnauthorized>,\n      children: [\n        { path: '/login', element: <LoginPage /> },\n        { path: '/signup', element: <SignUpPage /> },\n      ]\n    },\n    { path: '*', element: <NotFoundPage /> }\n  ]);\n\n  return (\n    <Suspense fallback={<RouterSuspense />}>\n      {routes}\n    </Suspense>\n  );\n}\n\nexport default Root;\n"]},"metadata":{},"sourceType":"module"}