{"ast":null,"code":"import _initializerDefineProperty from \"/home/user/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Work/2023/training/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty.js\";\nimport _applyDecoratedDescriptor from \"/home/user/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Work/2023/training/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\";\nimport _initializerWarningHelper from \"/home/user/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Work/2023/training/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper.js\";\n\nvar _dec, _dec2, _dec3, _dec4, _class, _descriptor;\n\nimport { MaxLength, MinLength, Matches } from 'class-validator';\nimport regExps from '../constants/channel-dto.constants';\nexport let ChannelDto = (_dec = Matches(regExps.name, {\n  message: 'Wrong symbols!'\n}), _dec2 = MinLength(2, {\n  message: 'Name is too short or empty'\n}), _dec3 = MaxLength(20, {\n  message: 'Name is too long'\n}), _dec4 = Reflect.metadata(\"design:type\", String), (_class = class ChannelDto {\n  constructor() {\n    _initializerDefineProperty(this, \"name\", _descriptor, this);\n\n    this.id = void 0;\n    this.key = void 0;\n    this.ingestEndpoint = void 0;\n    this.playbackURL = void 0;\n    this.ARN = void 0;\n    this.createdAt = void 0;\n    this.updatedAt = void 0;\n  }\n\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"name\", [_dec, _dec2, _dec3, _dec4], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class));","map":{"version":3,"sources":["/home/user/Документы/Work/2023/training/libs/shared/src/models/dto/channel.dto.ts"],"names":["MaxLength","MinLength","Matches","regExps","ChannelDto","name","message","id","key","ingestEndpoint","playbackURL","ARN","createdAt","updatedAt"],"mappings":";;;;;;AAAA,SACEA,SADF,EAEEC,SAFF,EAGEC,OAHF,QAIO,iBAJP;AAKA,OAAOC,OAAP,MAAoB,oCAApB;AAGA,WAAaC,UAAb,WACGF,OAAO,CAACC,OAAO,CAACE,IAAT,EAAe;AACvBC,EAAAA,OAAO,EAAE;AADc,CAAf,CADV,UAIEL,SAAS,CAAC,CAAD,EAAI;AACXK,EAAAA,OAAO,EAAE;AADE,CAAJ,CAJX,UAOEN,SAAS,CAAC,EAAD,EAAK;AACdM,EAAAA,OAAO,EAAE;AADK,CAAL,CAPX,6DAAO,MAAMF,UAAN,CAAiB;AAAA;AAAA;;AAAA,SAYtBG,EAZsB;AAAA,SAatBC,GAbsB;AAAA,SActBC,cAdsB;AAAA,SAetBC,WAfsB;AAAA,SAgBtBC,GAhBsB;AAAA,SAiBtBC,SAjBsB;AAAA,SAkBtBC,SAlBsB;AAAA;;AAAA,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { \n  MaxLength, \n  MinLength, \n  Matches \n} from 'class-validator';\nimport regExps from '../constants/channel-dto.constants';\n\n\nexport class ChannelDto {\n  @Matches(regExps.name, {\n\t\tmessage: 'Wrong symbols!',\n\t})\n\t@MinLength(2, { \n    message: 'Name is too short or empty' \n  })\n\t@MaxLength(20, {\n\t\tmessage: 'Name is too long',\n\t})\n  name: string;\n  \n  id?: string;\n  key?: string;\n  ingestEndpoint?: string;\n  playbackURL?: string;\n  ARN?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}"]},"metadata":{},"sourceType":"module"}