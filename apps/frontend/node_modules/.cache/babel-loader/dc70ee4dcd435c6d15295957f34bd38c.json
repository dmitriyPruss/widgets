{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Work/2023/training/apps/frontend/src/pages/channel/channel.page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useMemo, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useGetLiveStreamQuery, useGetWidgetsQuery } from '@boilerplate/store';\nimport { useSnackbar } from 'notistack';\nimport Widgets from '../../components/widgets/widgets.component';\nimport WidgetsWithLiveStream from '../../components/widgets-with-livestream/widgets-with-livestream.component';\nimport { socketClient } from '../../socket';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n\nconst ChannelPage = () => {\n  _s();\n\n  const [page, setPage] = useState(0);\n  const [pageSize, setPageSize] = useState(5);\n  const {\n    id\n  } = useParams();\n  const {\n    data: liveStream,\n    error\n  } = useGetLiveStreamQuery(id, {\n    pollingInterval: 7000\n  });\n  const {\n    data,\n    isLoading,\n    isError\n  } = useGetWidgetsQuery({\n    channelId: id,\n    filter: {\n      page: page + 1,\n      pageSize\n    }\n  });\n  const handleChangePage = useCallback((e, newPage) => {\n    setPage(newPage);\n  }, []);\n  const handleChangeRowsPerPage = useCallback(e => {\n    setPageSize(parseInt(e.target.value, 10));\n    setPage(0);\n  }, []);\n  const rows = useMemo(() => (data == null ? void 0 : data.list) || [], [data == null ? void 0 : data.list]);\n  const count = (data == null ? void 0 : data.total) || 0;\n  const isVideoPlaying = !error && !!(liveStream != null && liveStream.playbackUrl);\n  const initialWidgetsState = useMemo(() => rows == null ? void 0 : rows.map(row => ({\n    id: row == null ? void 0 : row.id,\n    left: (row == null ? void 0 : row.startX) || 0,\n    top: (row == null ? void 0 : row.startY) || 0,\n    price: row.price,\n    title: row.title,\n    url: row.url\n  })), [rows]);\n  const [widgets, setWidgets] = useState(initialWidgetsState);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  useEffect(() => {\n    setWidgets(initialWidgetsState);\n  }, [initialWidgetsState]);\n  const token = useSelector(state => state.authReducer.token);\n  useEffect(() => {\n    socketClient.joinBuyingWidgets(socketId);\n    socketClient.subscribeOnPurchasediWidget(socketId, data => {\n      console.log('purchased - ', data);\n      enqueueSnackbar(`Widget ${data == null ? void 0 : data.title}, price: ${data == null ? void 0 : data.price} is bought`, {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'center'\n        }\n      });\n    });\n    return () => {\n      socketClient.leftBuyingWidgets(socketId);\n      socketClient.unsubscribeOnPurchasedWidget(socketId);\n    };\n  }, []);\n  return !isVideoPlaying ? _jsxDEV(WidgetsWithLiveStream, {\n    playbackURL: liveStream == null ? void 0 : liveStream.playbackUrl,\n    widgets: widgets,\n    setWidgets: setWidgets,\n    count: count,\n    page: page,\n    pageSize: pageSize,\n    isLoading: isLoading,\n    isError: isError,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this) : _jsxDEV(Widgets, {\n    id: id,\n    page: page,\n    rows: rows,\n    pageSize: pageSize,\n    count: count,\n    setPage: setPage,\n    isLoading: isLoading,\n    isError: isError,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChannelPage, \"CXPJF15txzYSNpeJ+BR8N0LbNag=\", false, function () {\n  return [useParams, useGetLiveStreamQuery, useGetWidgetsQuery, useSnackbar, useSelector];\n});\n\n_c = ChannelPage;\nexport default ChannelPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChannelPage\");","map":{"version":3,"sources":["/home/user/Документы/Work/2023/training/apps/frontend/src/pages/channel/channel.page.tsx"],"names":["React","useState","useCallback","useMemo","useEffect","useParams","useSelector","useGetLiveStreamQuery","useGetWidgetsQuery","useSnackbar","Widgets","WidgetsWithLiveStream","socketClient","ChannelPage","page","setPage","pageSize","setPageSize","id","data","liveStream","error","pollingInterval","isLoading","isError","channelId","filter","handleChangePage","e","newPage","handleChangeRowsPerPage","parseInt","target","value","rows","list","count","total","isVideoPlaying","playbackUrl","initialWidgetsState","map","row","left","startX","top","startY","price","title","url","widgets","setWidgets","enqueueSnackbar","token","state","authReducer","joinBuyingWidgets","socketId","subscribeOnPurchasediWidget","console","log","variant","anchorOrigin","vertical","horizontal","leftBuyingWidgets","unsubscribeOnPurchasedWidget"],"mappings":"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","sourcesContent":["import React, { FC, useState, useCallback, useMemo, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { RootState, useGetLiveStreamQuery, useGetWidgetsQuery } from '@boilerplate/store';\nimport { useSnackbar } from 'notistack';\nimport Widgets from '../../components/widgets/widgets.component';\nimport WidgetsWithLiveStream \n  from '../../components/widgets-with-livestream/widgets-with-livestream.component';\nimport { IWidgetItem } from './channel.types';\nimport { socketClient } from '../../socket';\n\n  \n\nconst ChannelPage: FC = () => {\n  const [page, setPage] = useState(0);\n  const [pageSize, setPageSize] = useState(5);\n\n  const { id } = useParams();\n\n  const { data: liveStream, error } = useGetLiveStreamQuery(id as string, {\n    pollingInterval: 7000\n  });\n\n  const { data, isLoading, isError } = useGetWidgetsQuery({\n    channelId: id as string, \n    filter: {\n      page: page + 1, \n      pageSize\n    }\n  });\n\n  const handleChangePage = useCallback((e: unknown, newPage: number) => {\n    setPage(newPage);\n  }, []);\n  \n  const handleChangeRowsPerPage = useCallback((\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    setPageSize(parseInt(e.target.value, 10));\n    setPage(0);\n  }, []);\n    \n  const rows = useMemo(() => data?.list || [], [data?.list]);\n\n  const count = data?.total || 0;\n\n  const isVideoPlaying = !error && !!liveStream?.playbackUrl;\n\n  const initialWidgetsState: IWidgetItem[] = useMemo(\n    () => rows?.map(row => ({\n      id: row?.id,\n      left: row?.startX || 0,\n      top: row?.startY || 0,\n      price: row.price,\n      title: row.title,\n      url: row.url\t\n    })), \n    [rows]\n  );\n\n  const [widgets, setWidgets] = useState<IWidgetItem[]>(initialWidgetsState);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    setWidgets(initialWidgetsState);\n  }, [initialWidgetsState]);\n\n  const token = useSelector (\n    (state: RootState) => state.authReducer.token\n  );\n\n  useEffect(() => {\n    socketClient.joinBuyingWidgets(socketId);\n  \n    socketClient.subscribeOnPurchasediWidget(socketId, (data) => {\n      console.log('purchased - ', data);\n\n      enqueueSnackbar(\n        `Widget ${data?.title}, price: ${data?.price} is bought`, \n        { \n          variant: 'success', \n          anchorOrigin: {\n            vertical: 'top',\n            horizontal: 'center'\n          } \n        }\n      );\n    });\n  \n    return () => {\n      socketClient.leftBuyingWidgets(socketId);\n      socketClient.unsubscribeOnPurchasedWidget(socketId);\n    };\n    }, []);\n\n  return (\n    !isVideoPlaying \n      ? <WidgetsWithLiveStream\n          playbackURL={liveStream?.playbackUrl as string} \n          widgets={widgets}\n          setWidgets={setWidgets} \n          count={count} \n          page={page} \n          pageSize={pageSize}\n          isLoading={isLoading}\n          isError={isError}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage} \n        />\n      : <Widgets \n          id={id as string} \n          page={page} \n          rows={rows} \n          pageSize={pageSize} \n          count={count} \n          setPage={setPage}\n          isLoading={isLoading}\n          isError={isError} \n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage} \n        />    \n  );\n};\n\nexport default ChannelPage;\n"]},"metadata":{},"sourceType":"module"}