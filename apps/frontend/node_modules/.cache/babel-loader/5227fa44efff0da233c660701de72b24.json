{"ast":null,"code":"import _initializerDefineProperty from \"/home/user/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Work/2023/training/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty.js\";\nimport _applyDecoratedDescriptor from \"/home/user/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Work/2023/training/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\";\nimport _initializerWarningHelper from \"/home/user/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Work/2023/training/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper.js\";\n\nvar _dec, _dec2, _class, _descriptor;\n\nimport { IsNotEmpty } from 'class-validator';\nexport let StreamPlaybackDto = (_dec = IsNotEmpty(), _dec2 = Reflect.metadata(\"design:type\", String), (_class = class StreamPlaybackDto {\n  constructor() {\n    _initializerDefineProperty(this, \"playbackUrl\", _descriptor, this);\n\n    this.channelArn = void 0;\n    this.health = void 0;\n    this.startTime = void 0;\n    this.state = void 0;\n    this.streamId = void 0;\n    this.viewerCount = void 0;\n  }\n\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"playbackUrl\", [_dec, _dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class));","map":{"version":3,"sources":["/home/user/Документы/Work/2023/training/libs/shared/src/models/dto/stream-playback.dto.ts"],"names":["IsNotEmpty","StreamPlaybackDto","channelArn","health","startTime","state","streamId","viewerCount"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA2B,iBAA3B;AAEA,WAAaC,iBAAb,WACGD,UAAU,EADb,6DAAO,MAAMC,iBAAN,CAAwB;AAAA;AAAA;;AAAA,SAI7BC,UAJ6B;AAAA,SAK7BC,MAL6B;AAAA,SAM7BC,SAN6B;AAAA,SAO7BC,KAP6B;AAAA,SAQ7BC,QAR6B;AAAA,SAS7BC,WAT6B;AAAA;;AAAA,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { IsNotEmpty } from 'class-validator';\n  \nexport class StreamPlaybackDto {\n  @IsNotEmpty()\n  playbackUrl: string;\n  \n  channelArn?: string;\n  health?: string;\n  startTime?: Date;\n  state?: string;\n  streamId?: string;\n  viewerCount?: number\n}"]},"metadata":{},"sourceType":"module"}