{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Work/2023/training/apps/frontend/src/pages/login/login.page.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Avatar, Box, Button, Checkbox, Container, FormControlLabel, FormControl, FormHelperText, Grid, TextField, Typography } from '@mui/material';\nimport { classValidatorResolver } from '@hookform/resolvers/class-validator';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport RouterSuspense from '../../components/router-suspense/router-suspense.component';\nimport { LoginDto } from '@boilerplate/shared';\nimport { useLoginMutation } from '@boilerplate/store';\nimport { contentStyle, errorStyle } from './login.styles';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nconst resolver = classValidatorResolver(LoginDto);\n\nconst LoginPage = () => {\n  _s();\n\n  var _errors$email, _errors$password;\n\n  const {\n    handleSubmit,\n    register,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver\n  });\n  const [login, {\n    isLoading\n  }] = useLoginMutation();\n\n  const onConfirm = async () => {\n    await handleSubmit(async value => {\n      try {\n        await login(value);\n      } catch (e) {\n        console.error(e.message);\n      }\n    })();\n  };\n\n  return _jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [isLoading && _jsxDEV(Box, {\n      width: \"100%\",\n      position: \"absolute\",\n      top: \"5px\",\n      left: \"0\",\n      children: _jsxDEV(RouterSuspense, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), _jsxDEV(Box, {\n      sx: contentStyle,\n      children: [_jsxDEV(Avatar, {\n        sx: {\n          m: 1,\n          bgcolor: 'secondary.main'\n        },\n        children: _jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), _jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), _jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit(onConfirm),\n        noValidate: true,\n        sx: {\n          mt: 1\n        },\n        children: [_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [_jsxDEV(TextField, Object.assign({\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            label: \"Email Address\",\n            autoComplete: \"email\",\n            autoFocus: true,\n            error: !!errors.email,\n            \"aria-describedby\": \"component-error-email\"\n          }, register('email')), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 7\n          }, this), _jsxDEV(FormHelperText, {\n            error: true,\n            id: \"component-error-email\",\n            sx: errorStyle,\n            children: (_errors$email = errors.email) == null ? void 0 : _errors$email.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), _jsxDEV(FormControl, {\n          fullWidth: true,\n          sx: {\n            mb: 3\n          },\n          children: [_jsxDEV(TextField, Object.assign({\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            label: \"Password\",\n            autoComplete: \"current-password\",\n            type: \"password\",\n            error: !!errors.password,\n            \"aria-describedby\": \"component-error-password\"\n          }, register('password')), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 7\n          }, this), _jsxDEV(FormHelperText, {\n            error: true,\n            id: \"component-error-password\",\n            sx: errorStyle,\n            children: (_errors$password = errors.password) == null ? void 0 : _errors$password.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), _jsxDEV(FormControlLabel, {\n          control: _jsxDEV(Checkbox, {\n            value: \"remember\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 22\n          }, this),\n          label: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), _jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), _jsxDEV(Grid, {\n          container: true,\n          children: _jsxDEV(Grid, {\n            item: true,\n            children: _jsxDEV(Link, {\n              to: '/signup',\n              children: \"Don't have an account? Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPage, \"2/il4FdbQPrDIqQQm9l6QyKN9gE=\", false, function () {\n  return [useForm, useLoginMutation];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/home/user/Документы/Work/2023/training/apps/frontend/src/pages/login/login.page.tsx"],"names":["React","Avatar","Box","Button","Checkbox","Container","FormControlLabel","FormControl","FormHelperText","Grid","TextField","Typography","classValidatorResolver","LockOutlinedIcon","Link","useForm","RouterSuspense","LoginDto","useLoginMutation","contentStyle","errorStyle","resolver","LoginPage","handleSubmit","register","formState","errors","login","isLoading","onConfirm","value","e","console","error","message","m","bgcolor","mt","email","mb","password"],"mappings":"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","sourcesContent":["import React, { FC } from 'react';\nimport { \n  Avatar, \n  Box, \n  Button, \n  Checkbox, \n  Container, \n  FormControlLabel, \n\tFormControl,\n\tFormHelperText,\n  Grid, \n  TextField, \n  Typography \n} from '@mui/material';\nimport { classValidatorResolver } from '@hookform/resolvers/class-validator';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport RouterSuspense from '../../components/router-suspense/router-suspense.component';\nimport { LoginDto } from '@boilerplate/shared';\nimport { useLoginMutation } from '@boilerplate/store';\nimport { contentStyle, errorStyle } from './login.styles';\n\n\nconst resolver = classValidatorResolver(LoginDto);\n\nconst LoginPage: FC = () => {\n  const { \n    handleSubmit, \n    register, \n    formState: { errors } \n  } = useForm<LoginDto>({ resolver });\n\n  const [login, { isLoading }] = useLoginMutation();\n\n  const onConfirm = async (): Promise<void> => {\n    await handleSubmit(\n      async value => {\n        try {          \n          await login(value);\n        } catch (e: any) {\n          console.error(e.message);\n        }\n      }\n    )();\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      {isLoading && (\n\t\t\t\t<Box width=\"100%\" position=\"absolute\" top=\"5px\" left=\"0\">\n\t\t\t\t\t<RouterSuspense />\n\t\t\t\t</Box>\n      )}\n      <Box sx={contentStyle} >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <Box \n          component=\"form\"\n          onSubmit={handleSubmit(onConfirm)}\n          noValidate \n          sx={{ mt: 1 }}\n        >\n          <FormControl fullWidth>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tlabel=\"Email Address\"\n\t\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\terror={!!errors.email}\n\t\t\t\t\t\t\taria-describedby=\"component-error-email\"\n\t\t\t\t\t\t\t{...register('email')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormHelperText error id=\"component-error-email\" sx={errorStyle}>\n\t\t\t\t\t\t\t{errors.email?.message}\n\t\t\t\t\t\t</FormHelperText>\n\t\t\t\t\t</FormControl>\n          <FormControl fullWidth sx={{ mb: 3 }}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\ttype=\"password\"\n              error={!!errors.password}\n\t\t\t\t\t\t\taria-describedby=\"component-error-password\"\n\t\t\t\t\t\t\t{...register('password')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormHelperText error id=\"component-error-password\" sx={errorStyle}>\n\t\t\t\t\t\t\t{errors.password?.message}\n\t\t\t\t\t\t</FormHelperText>\n\t\t\t\t\t</FormControl>\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link to={'/signup'}>\n                Don't have an account? Sign Up\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}