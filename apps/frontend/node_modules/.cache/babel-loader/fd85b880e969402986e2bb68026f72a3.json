{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Work/2023/training/apps/frontend/src/components/widgets-store/widgets-store.component.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport { Box, Dialog, DialogContent, DialogTitle, List, ListItem, ListItemText } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useSelector } from 'react-redux';\nimport { closeIconStyle, dialogStyle, dialogContentStyle } from './widgets-store.styles';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n\nconst WidgetsStore = () => {\n  _s();\n\n  const [open, setOpen] = useState(true);\n  const closeHandler = useCallback(() => {\n    setOpen(false);\n  }, []);\n  const widgetsInStore = useSelector(state => state.widgetsStoreReducer.widgetsInStore);\n  console.log('widgets in store - ', widgetsInStore);\n  return _jsxDEV(Dialog, {\n    open: open,\n    maxWidth: \"md\",\n    keepMounted: true,\n    onClose: closeHandler,\n    \"aria-describedby\": \"alert-dialog-slide-description\",\n    sx: dialogStyle,\n    children: _jsxDEV(Box, {\n      m: 1.2,\n      boxSizing: \"border-box\",\n      position: \"relative\",\n      width: \"650px\",\n      children: [_jsxDEV(DialogTitle, {\n        sx: {\n          fontSize: '24px'\n        },\n        children: \"Widgets Store\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), _jsxDEV(DialogContent, {\n        sx: dialogContentStyle,\n        children: [_jsxDEV(CloseIcon, {\n          sx: closeIconStyle,\n          onClick: closeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), _jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          children: _jsxDEV(List, {\n            children: widgetsInStore == null ? void 0 : widgetsInStore.map(widget => _jsxDEV(ListItem, {\n              disablePadding: true,\n              children: [_jsxDEV(ListItemText, {\n                children: widget == null ? void 0 : widget.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this), _jsxDEV(ListItemText, {\n                children: widget == null ? void 0 : widget.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this), _jsxDEV(ListItemText, {\n                children: widget == null ? void 0 : widget.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this)]\n            }, widget == null ? void 0 : widget.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WidgetsStore, \"lPzykVSBOH1uW5WhSArMnXCkQ70=\", false, function () {\n  return [useSelector];\n});\n\n_c = WidgetsStore;\nexport default WidgetsStore;\n\nvar _c;\n\n$RefreshReg$(_c, \"WidgetsStore\");","map":{"version":3,"sources":["/home/user/Документы/Work/2023/training/apps/frontend/src/components/widgets-store/widgets-store.component.tsx"],"names":["React","useCallback","useState","Box","Dialog","DialogContent","DialogTitle","List","ListItem","ListItemText","CloseIcon","useSelector","closeIconStyle","dialogStyle","dialogContentStyle","WidgetsStore","open","setOpen","closeHandler","widgetsInStore","state","widgetsStoreReducer","console","log","fontSize","map","widget","title","price","quantity","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,WAApB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SACEC,GADF,EAEEC,MAFF,EAGEC,aAHF,EAIEC,WAJF,EAKEC,IALF,EAMEC,QANF,EAOEC,YAPF,QAQO,eARP;AASA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SACEC,cADF,EAEEC,WAFF,EAGEC,kBAHF,QAIO,wBAJP;;;AAOA,MAAMC,YAAgB,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAU,IAAV,CAAhC;AAEA,QAAMgB,YAAY,GAAGjB,WAAW,CAAC,MAAM;AACtCgB,IAAAA,OAAO,CAAC,KAAD,CAAP;AACA,GAF+B,EAE7B,EAF6B,CAAhC;AAIA,QAAME,cAAc,GAAGR,WAAW,CAAES,KAAD,IAAsBA,KAAK,CAACC,mBAAN,CAA0BF,cAAjD,CAAlC;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCJ,cAAnC;AAEA,SACE,QAAC,MAAD;AACE,IAAA,IAAI,EAAEH,IADR;AAEE,IAAA,QAAQ,EAAC,IAFX;AAGE,IAAA,WAAW,MAHb;AAIE,IAAA,OAAO,EAAEE,YAJX;AAKE,wBAAiB,gCALnB;AAME,IAAA,EAAE,EAAEL,WANN;AAAA,cAQE,QAAC,GAAD;AAAK,MAAA,CAAC,EAAE,GAAR;AAAa,MAAA,SAAS,EAAC,YAAvB;AAAoC,MAAA,QAAQ,EAAC,UAA7C;AAAwD,MAAA,KAAK,EAAC,OAA9D;AAAA,iBACE,QAAC,WAAD;AAAa,QAAA,EAAE,EAAE;AAACW,UAAAA,QAAQ,EAAE;AAAX,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIE,QAAC,aAAD;AAAe,QAAA,EAAE,EAAEV,kBAAnB;AAAA,mBACE,QAAC,SAAD;AAAW,UAAA,EAAE,EAAEF,cAAf;AAA+B,UAAA,OAAO,EAAEM;AAAxC;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,QAAC,GAAD;AAAK,UAAA,OAAO,EAAC,MAAb;AAAoB,UAAA,cAAc,EAAC,eAAnC;AAAmD,UAAA,UAAU,EAAC,QAA9D;AAAA,oBACE,QAAC,IAAD;AAAA,sBACGC,cADH,oBACGA,cAAc,CAAEM,GAAhB,CAAoBC,MAAM,IACzB,QAAC,QAAD;AAAU,cAAA,cAAc,MAAxB;AAAA,yBACE,QAAC,YAAD;AAAA,0BAAeA,MAAf,oBAAeA,MAAM,CAAEC;AAAvB;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,QAAC,YAAD;AAAA,0BAAeD,MAAf,oBAAeA,MAAM,CAAEE;AAAvB;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGE,QAAC,YAAD;AAAA,0BAAeF,MAAf,oBAAeA,MAAM,CAAEG;AAAvB;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA,eAA8BH,MAA9B,oBAA8BA,MAAM,CAAEI,EAAtC;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CAzCD;;GAAMf,Y;UAOmBJ,W;;;KAPnBI,Y;AA2CN,eAAeA,YAAf","sourcesContent":["import React, { FC, useCallback, useState } from 'react';\nimport { \n  Box, \n  Dialog, \n  DialogContent, \n  DialogTitle,\n  List, \n  ListItem,\n  ListItemText \n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '@boilerplate/store';\nimport { \n  closeIconStyle,\n  dialogStyle, \n  dialogContentStyle\n} from './widgets-store.styles';\n\n\nconst WidgetsStore: FC = () => {\n  const [open, setOpen] = useState<boolean>(true);\n\n  const closeHandler = useCallback(() => {\n\t  setOpen(false);\n  }, []);\n\n  const widgetsInStore = useSelector((state: RootState) => state.widgetsStoreReducer.widgetsInStore);\n   \n  console.log('widgets in store - ', widgetsInStore);\n\n  return (\n    <Dialog\n      open={open}\n      maxWidth=\"md\"\n      keepMounted\n      onClose={closeHandler}\n      aria-describedby=\"alert-dialog-slide-description\"\n      sx={dialogStyle}\n    >\n      <Box m={1.2} boxSizing=\"border-box\" position=\"relative\" width=\"650px\">       \n        <DialogTitle sx={{fontSize: '24px'}}>\n          Widgets Store\n        </DialogTitle>\n        <DialogContent sx={dialogContentStyle}>\n          <CloseIcon sx={closeIconStyle} onClick={closeHandler} />\n          <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n            <List>\n              {widgetsInStore?.map(widget => \n                <ListItem disablePadding key={widget?.id}>\n                  <ListItemText>{widget?.title}</ListItemText>\n                  <ListItemText>{widget?.price}</ListItemText>\n                  <ListItemText>{widget?.quantity}</ListItemText>\n                </ListItem>\n              )}\n            </List>\n          </Box> \n        </DialogContent>\n      </Box>\n    </Dialog>\n  );\n}\n\nexport default WidgetsStore;"]},"metadata":{},"sourceType":"module"}