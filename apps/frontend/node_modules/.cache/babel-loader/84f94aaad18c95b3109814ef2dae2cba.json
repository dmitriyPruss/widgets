{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Work/2023/training/apps/frontend/src/components/product-card-layer/product-card-layer.component.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { Box, Typography, Link } from '@mui/material';\nimport { useDragLayer } from 'react-dnd';\nimport { red } from '@mui/material/colors';\nimport setStyles from '../../utils/set-styles.utils';\nimport { layerStyle, linkStyle } from './product-card-layer.styles';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n\nconst ProductCardLayer = ({\n  widget,\n  setCurrentCoords\n}) => {\n  _s();\n\n  const {\n    isDragging,\n    initialOffset,\n    currentOffset\n  } = useDragLayer(monitor => ({\n    item: monitor.getItem(),\n    itemType: monitor.getItemType(),\n    initialOffset: monitor.getInitialSourceClientOffset(),\n    currentOffset: monitor.getSourceClientOffset(),\n    isDragging: monitor.isDragging()\n  }));\n  useEffect(() => {\n    if (!isDragging) {\n      return;\n    }\n\n    if (!currentOffset) {\n      return;\n    }\n\n    const {\n      x,\n      y\n    } = currentOffset;\n    setCurrentCoords({\n      x: (x - 30) / 2,\n      y: (y - 110) / 2\n    });\n  }, [currentOffset, isDragging, setCurrentCoords]);\n\n  if (!isDragging) {\n    return null;\n  }\n\n  return _jsxDEV(\"div\", {\n    style: layerStyle,\n    children: _jsxDEV(\"div\", {\n      style: setStyles(initialOffset, currentOffset),\n      children: _jsxDEV(Box, {\n        width: \"230px\",\n        height: \"140px\",\n        bgcolor: red[100],\n        borderRadius: 3,\n        boxShadow: \"1px 1px 8px 0 grey\",\n        zIndex: 300,\n        border: `3px double ${red[300]}`,\n        p: 1.5,\n        children: [_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: widget == null ? void 0 : widget.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), _jsxDEV(Typography, {\n          fontSize: \"18px\",\n          children: [\"Price: \", widget == null ? void 0 : widget.price, \" $\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), _jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          children: _jsxDEV(Link, {\n            variant: \"button\",\n            underline: \"none\",\n            target: \"blank\",\n            sx: linkStyle,\n            children: \"SHOP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductCardLayer, \"vW62QpsCgmr6o6G7ZpbV0zdR2yY=\", false, function () {\n  return [useDragLayer];\n});\n\n_c = ProductCardLayer;\nexport default ProductCardLayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductCardLayer\");","map":{"version":3,"sources":["/home/user/Документы/Work/2023/training/apps/frontend/src/components/product-card-layer/product-card-layer.component.tsx"],"names":["useEffect","Box","Typography","Link","useDragLayer","red","setStyles","layerStyle","linkStyle","ProductCardLayer","widget","setCurrentCoords","isDragging","initialOffset","currentOffset","monitor","item","getItem","itemType","getItemType","getInitialSourceClientOffset","getSourceClientOffset","x","y","title","price"],"mappings":"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","sourcesContent":["import { FC, useEffect } from 'react'\nimport { Box, Typography, Link } from '@mui/material';\nimport { useDragLayer } from 'react-dnd';\nimport { red } from '@mui/material/colors';\nimport setStyles from '../../utils/set-styles.utils';\nimport { IProductCardLayerProps } from './product-card-layer.types';\nimport { layerStyle, linkStyle } from './product-card-layer.styles';\n\n\nconst ProductCardLayer: FC<IProductCardLayerProps> = (\n  { widget, setCurrentCoords }: IProductCardLayerProps\n) => {\n  const {  \n    isDragging,  \n    initialOffset, \n    currentOffset \n  } = useDragLayer((monitor) => ({\n      item: monitor.getItem(),\n      itemType: monitor.getItemType(),\n      initialOffset: monitor.getInitialSourceClientOffset(),\n      currentOffset: monitor.getSourceClientOffset(),\n      isDragging: monitor.isDragging(),\n    })\n  );\n\n  useEffect(() => {\n    if (!isDragging) {\n      return;\n    }\n\n    if (!currentOffset) {\n      return;\n    }\n\n    const { x, y } = currentOffset;\n\n    setCurrentCoords({\n      x: (x - 30) / 2,\n      y: (y - 110) / 2\n    });\n  }, [\n    currentOffset, \n    isDragging, \n    setCurrentCoords\n  ]);\n\n  if(!isDragging) {\n    return null\n  }\n\n  return (\n    <div style={layerStyle}>\n      <div\n        style={setStyles(initialOffset, currentOffset)}\n      >\n        <Box \n          width=\"230px\" \n          height=\"140px\"       \n          bgcolor={red[100]} \n          borderRadius={3} \n          boxShadow=\"1px 1px 8px 0 grey\" \n          zIndex={300}\n          border={`3px double ${red[300]}`}\n          p={1.5}\n        >\n          <Typography variant=\"h5\">{widget?.title}</Typography>\n          <Typography fontSize=\"18px\">Price: {widget?.price} $</Typography>\n          <Box display=\"flex\" justifyContent=\"flex-end\">  \n            <Link \n              variant=\"button\" \n              underline=\"none\" \n              target=\"blank\"\n              sx={linkStyle} \n            >\n              SHOP\n            </Link> \n          </Box>  \n        </Box>\n      </div>\n    </div>\n  )\n}\n\nexport default ProductCardLayer;"]},"metadata":{},"sourceType":"module"}