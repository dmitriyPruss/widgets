{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Work/2023/training/apps/frontend/src/pages/signup/signup.page.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Avatar, Box, Button, Container, FormControl, FormHelperText, Grid, TextField, Typography } from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { classValidatorResolver } from '@hookform/resolvers/class-validator';\nimport RouterSuspense from '../../components/router-suspense/router-suspense.component';\nimport { SignUpDto } from '@boilerplate/shared';\nimport { useSignUpMutation } from '@boilerplate/store';\nimport { contentStyle, errorStyle } from './signup.styles';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nconst resolver = classValidatorResolver(SignUpDto);\n\nconst SignUpPage = () => {\n  _s();\n\n  var _errors$name, _errors$lastName, _errors$email, _errors$password;\n\n  const {\n    handleSubmit,\n    register,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver\n  });\n  const [signUp, {\n    isLoading\n  }] = useSignUpMutation();\n\n  const onConfirm = async () => {\n    await handleSubmit(async value => {\n      try {\n        await signUp(value);\n      } catch (e) {\n        console.error(e.message);\n      }\n    })();\n  };\n\n  return _jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [isLoading && _jsxDEV(Box, {\n      width: \"100%\",\n      position: \"absolute\",\n      top: \"5px\",\n      left: \"0\",\n      children: _jsxDEV(RouterSuspense, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), _jsxDEV(Box, {\n      sx: contentStyle,\n      children: [_jsxDEV(Avatar, {\n        sx: {\n          m: 1,\n          bgcolor: 'secondary.main'\n        },\n        children: _jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), _jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), _jsxDEV(Box, {\n        component: \"form\",\n        noValidate: true,\n        onSubmit: handleSubmit(onConfirm),\n        sx: {\n          mt: 3\n        },\n        children: [_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            position: \"relative\",\n            children: _jsxDEV(FormControl, {\n              children: [_jsxDEV(TextField, Object.assign({\n                required: true,\n                fullWidth: true,\n                label: \"First Name\",\n                autoComplete: \"given-name\",\n                autoFocus: true,\n                error: !!errors.name,\n                \"aria-describedby\": \"component-error-name\"\n              }, register('name')), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), _jsxDEV(FormHelperText, {\n                error: true,\n                id: \"component-error-name\",\n                sx: errorStyle,\n                children: (_errors$name = errors.name) == null ? void 0 : _errors$name.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), _jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            position: \"relative\",\n            children: _jsxDEV(FormControl, {\n              children: [_jsxDEV(TextField, Object.assign({\n                required: true,\n                fullWidth: true,\n                label: \"Last Name\",\n                autoComplete: \"family-name\",\n                error: !!errors.lastName,\n                \"aria-describedby\": \"component-error-lastname\"\n              }, register('lastName')), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this), _jsxDEV(FormHelperText, {\n                error: true,\n                id: \"component-error-lastname\",\n                sx: errorStyle,\n                children: (_errors$lastName = errors.lastName) == null ? void 0 : _errors$lastName.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), _jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            mt: 4,\n            mb: 4,\n            position: \"relative\",\n            children: _jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [_jsxDEV(TextField, Object.assign({\n                required: true,\n                fullWidth: true,\n                label: \"Email Address\",\n                autoComplete: \"email\",\n                error: !!errors.email,\n                \"aria-describedby\": \"component-error-email\"\n              }, register('email')), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this), _jsxDEV(FormHelperText, {\n                error: true,\n                id: \"component-error-email\",\n                sx: errorStyle,\n                children: (_errors$email = errors.email) == null ? void 0 : _errors$email.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), _jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            mb: 4,\n            position: \"relative\",\n            children: _jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [_jsxDEV(TextField, Object.assign({\n                required: true,\n                fullWidth: true,\n                label: \"Password\",\n                autoComplete: \"new-password\",\n                type: \"password\",\n                error: !!errors.password,\n                \"aria-describedby\": \"component-error-password\"\n              }, register('password')), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), _jsxDEV(FormHelperText, {\n                error: true,\n                id: \"component-error-password\",\n                sx: errorStyle,\n                children: (_errors$password = errors.password) == null ? void 0 : _errors$password.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), _jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          sx: {\n            mt: 3,\n            mb: 2\n          },\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), _jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"flex-end\",\n          children: _jsxDEV(Grid, {\n            item: true,\n            children: _jsxDEV(Link, {\n              to: '/login',\n              children: \"Already have an account? Sign in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUpPage, \"hLJIbCQrld60stHbkUVg23MdZy0=\", false, function () {\n  return [useForm, useSignUpMutation];\n});\n\n_c = SignUpPage;\nexport default SignUpPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpPage\");","map":{"version":3,"sources":["/home/user/Документы/Work/2023/training/apps/frontend/src/pages/signup/signup.page.tsx"],"names":["React","Avatar","Box","Button","Container","FormControl","FormHelperText","Grid","TextField","Typography","LockOutlinedIcon","Link","useForm","classValidatorResolver","RouterSuspense","SignUpDto","useSignUpMutation","contentStyle","errorStyle","resolver","SignUpPage","handleSubmit","register","formState","errors","signUp","isLoading","onConfirm","value","e","console","error","message","m","bgcolor","mt","name","lastName","email","password","mb"],"mappings":"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","sourcesContent":["import React, { FC } from 'react';\nimport { \n  Avatar, \n  Box, \n  Button, \n  Container, \n  FormControl,\n  FormHelperText,\n  Grid, \n  TextField, \n  Typography \n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { classValidatorResolver } from '@hookform/resolvers/class-validator';\nimport RouterSuspense from '../../components/router-suspense/router-suspense.component';\nimport { SignUpDto } from '@boilerplate/shared';\nimport { useSignUpMutation } from '@boilerplate/store';\nimport { contentStyle, errorStyle } from './signup.styles';\n\n\nconst resolver = classValidatorResolver(SignUpDto);\n\nconst SignUpPage: FC = () => {\n  const { \n    handleSubmit, \n    register, \n    formState: { errors } \n  } = useForm<SignUpDto>({ resolver });\n\n  const [signUp, { isLoading }] = useSignUpMutation();\n\n  const onConfirm = async (): Promise<void> => {\n    await handleSubmit(\n      async value => {\n        try {\n          await signUp(value);\n        } catch (e: any) {\n          console.error(e.message);\n        }\n      }\n    )();\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      {isLoading && (\n\t\t\t\t<Box width=\"100%\" position=\"absolute\" top=\"5px\" left=\"0\">\n\t\t\t\t\t<RouterSuspense />\n\t\t\t\t</Box>\n      )}\n      <Box sx={contentStyle} >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Box component=\"form\" noValidate onSubmit={handleSubmit(onConfirm)} sx={{ mt: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6} position=\"relative\">\n              <FormControl>\n                <TextField\n                  required\n                  fullWidth\n                  label=\"First Name\"\n                  autoComplete=\"given-name\"\n                  autoFocus\n                  error={!!errors.name}\n                  aria-describedby=\"component-error-name\"\n                  {...register('name')}\n                />\n                <FormHelperText error id=\"component-error-name\" sx={errorStyle}>\n                  {errors.name?.message}\n                </FormHelperText>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6} position=\"relative\">\n              <FormControl>\n                <TextField\n                  required\n                  fullWidth\n                  label=\"Last Name\"\n                  autoComplete=\"family-name\"\n                  error={!!errors.lastName}\n                  aria-describedby=\"component-error-lastname\"\n                  {...register('lastName')}\n                />\n                <FormHelperText error id=\"component-error-lastname\" sx={errorStyle}>\n                  {errors.lastName?.message}\n                </FormHelperText>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} mt={4} mb={4} position=\"relative\">\n              <FormControl fullWidth>\n                <TextField\n                  required\n                  fullWidth\n                  label=\"Email Address\"\n                  autoComplete=\"email\"\n                  error={!!errors.email}\n                  aria-describedby=\"component-error-email\"\n                  {...register('email')}\n                />\n                <FormHelperText error id=\"component-error-email\" sx={errorStyle}>\n                  {errors.email?.message}\n                </FormHelperText>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} mb={4} position=\"relative\">\n              <FormControl fullWidth>\n                <TextField\n                  required\n                  fullWidth\n                  label=\"Password\"\n                  autoComplete=\"new-password\"\n                  type=\"password\"\n                  error={!!errors.password}\n                  aria-describedby=\"component-error-password\"\n                  {...register('password')}\n                />\n                <FormHelperText error id=\"component-error-password\" sx={errorStyle}>\n                  {errors.password?.message}\n                </FormHelperText>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign Up\n          </Button>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link to={'/login'}>\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n\nexport default SignUpPage;\n"]},"metadata":{},"sourceType":"module"}