{"ast":null,"code":"import \"core-js/modules/es.promise.js\";\nimport { setToken } from '../reducers/auth.slice';\nimport { mainApi } from './main-api.api';\nexport const authEndpoints = mainApi.injectEndpoints({\n  endpoints: builder => ({\n    login: builder.mutation({\n      query: data => ({\n        url: '/users/login',\n        method: 'POST',\n        body: data\n      }),\n\n      async onQueryStarted(args, {\n        dispatch,\n        queryFulfilled\n      }) {\n        try {\n          const {\n            data\n          } = await queryFulfilled;\n          dispatch(setToken(data));\n        } catch (e) {\n          console.error(e);\n        }\n      },\n\n      invalidatesTags: ['Auth']\n    }),\n    signUp: builder.mutation({\n      query: data => ({\n        url: '/users/signup',\n        method: 'POST',\n        body: data\n      }),\n\n      async onQueryStarted(args, {\n        dispatch,\n        queryFulfilled\n      }) {\n        try {\n          const {\n            data\n          } = await queryFulfilled;\n          dispatch(setToken(data));\n        } catch (e) {\n          console.error(e);\n        }\n      },\n\n      invalidatesTags: ['Auth']\n    })\n  })\n});\nexport const {\n  useLoginMutation,\n  useSignUpMutation\n} = authEndpoints;","map":{"version":3,"sources":["/home/user/Документы/Work/2023/training/libs/store/src/rtk-store/services/auth.api.ts"],"names":["setToken","mainApi","authEndpoints","injectEndpoints","endpoints","builder","login","mutation","query","data","url","method","body","onQueryStarted","args","dispatch","queryFulfilled","e","console","error","invalidatesTags","signUp","useLoginMutation","useSignUpMutation"],"mappings":";AACA,SAASA,QAAT,QAAyB,wBAAzB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AAGA,OAAO,MAAMC,aAAa,GAAGD,OAAO,CAACE,eAAR,CAAwB;AACnDC,EAAAA,SAAS,EAAGC,OAAD,KAAc;AACvBC,IAAAA,KAAK,EAAED,OAAO,CAACE,QAAR,CAAmC;AACxCC,MAAAA,KAAK,EAAEC,IAAI,KAAK;AACdC,QAAAA,GAAG,EAAE,cADS;AAEdC,QAAAA,MAAM,EAAE,MAFM;AAGdC,QAAAA,IAAI,EAAEH;AAHQ,OAAL,CAD6B;;AAMxC,YAAMI,cAAN,CAAqBC,IAArB,EAA2B;AAAEC,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,OAA3B,EAAyD;AACvD,YAAI;AACF,gBAAM;AAAEP,YAAAA;AAAF,cAAW,MAAMO,cAAvB;AACAD,UAAAA,QAAQ,CAACf,QAAQ,CAACS,IAAD,CAAT,CAAR;AACD,SAHD,CAGE,OAAOQ,CAAP,EAAU;AACVC,UAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF,OAbuC;;AAcxCG,MAAAA,eAAe,EAAE,CAAC,MAAD;AAduB,KAAnC,CADgB;AAiBvBC,IAAAA,MAAM,EAAEhB,OAAO,CAACE,QAAR,CAA0C;AAChDC,MAAAA,KAAK,EAAEC,IAAI,KAAK;AACdC,QAAAA,GAAG,EAAE,eADS;AAEdC,QAAAA,MAAM,EAAE,MAFM;AAGdC,QAAAA,IAAI,EAAEH;AAHQ,OAAL,CADqC;;AAMhD,YAAMI,cAAN,CAAqBC,IAArB,EAA2B;AAAEC,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,OAA3B,EAAyD;AACvD,YAAI;AACF,gBAAM;AAAEP,YAAAA;AAAF,cAAW,MAAMO,cAAvB;AACAD,UAAAA,QAAQ,CAACf,QAAQ,CAACS,IAAD,CAAT,CAAR;AACD,SAHD,CAGE,OAAOQ,CAAP,EAAU;AACVC,UAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF,OAb+C;;AAchDG,MAAAA,eAAe,EAAE,CAAC,MAAD;AAd+B,KAA1C;AAjBe,GAAd;AADwC,CAAxB,CAAtB;AAqCP,OAAO,MAAM;AAAEE,EAAAA,gBAAF;AAAoBC,EAAAA;AAApB,IAA0CrB,aAAhD","sourcesContent":["import { LoginDto, UserCreationDto } from '@boilerplate/shared';\nimport { setToken } from '../reducers/auth.slice';\nimport { mainApi } from './main-api.api';\n\n\nexport const authEndpoints = mainApi.injectEndpoints({\n  endpoints: (builder) => ({\n    login: builder.mutation<string, LoginDto>({\n      query: data => ({\n        url: '/users/login',\n        method: 'POST',\n        body: data\n      }),\n      async onQueryStarted(args, { dispatch, queryFulfilled }) {\n        try {\n          const { data } = await queryFulfilled;\n          dispatch(setToken(data));\n        } catch (e) {\n          console.error(e);\n        }\n      },\n      invalidatesTags: ['Auth']\n    }),\n    signUp: builder.mutation<string, UserCreationDto>({\n      query: data => ({\n        url: '/users/signup',\n        method: 'POST',\n        body: data\n      }),\n      async onQueryStarted(args, { dispatch, queryFulfilled }) {\n        try {\n          const { data } = await queryFulfilled;\n          dispatch(setToken(data));\n        } catch (e) {\n          console.error(e);\n        }\n      },\n      invalidatesTags: ['Auth']\n    })\n  })\n});\n\nexport const { useLoginMutation, useSignUpMutation } = authEndpoints;"]},"metadata":{},"sourceType":"module"}