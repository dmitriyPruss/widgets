{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Work/2023/training/apps/frontend/src/components/amazon-ivs-player/amazon-ivs-player.component.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport { registerIVSTech, registerIVSQualityPlugin } from 'amazon-ivs-player';\nimport videojs from 'video.js';\nimport { Box } from '@mui/material';\nimport { blue } from '@mui/material/colors';\nimport getAbsolutePath from '../../utils/get-absolute-path.utils';\nimport { playerOptions, wasmBinaryPath, wasmWorkerPath } from '../../constants/amazon-ivs-player.constants';\nimport 'video.js/dist/video-js.css';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n\nconst AmazonIVSPlayer = ({\n  playbackURL\n}) => {\n  _s();\n\n  const video = useRef(null);\n  const player = useRef(null);\n  const createPlayer = useCallback(() => {\n    if (!video.current) {\n      return;\n    }\n\n    const path = getAbsolutePath(wasmBinaryPath);\n    registerIVSTech(videojs, {\n      wasmBinary: getAbsolutePath(wasmBinaryPath),\n      wasmWorker: getAbsolutePath(wasmWorkerPath)\n    });\n    registerIVSQualityPlugin(videojs);\n    player.current = videojs(video.current, playerOptions);\n    player.current.ready(() => {\n      var _player$current, _player$current2;\n\n      (_player$current = player.current) == null ? void 0 : _player$current.enableIVSQualityPlugin();\n      (_player$current2 = player.current) == null ? void 0 : _player$current2.src(playbackURL);\n    });\n  }, [playbackURL]);\n  const removePlayer = useCallback(() => {\n    var _player$current3;\n\n    if (!video.current) {\n      return;\n    }\n\n    (_player$current3 = player.current) == null ? void 0 : _player$current3.dispose();\n    player.current = null;\n  }, []); // @ts-ignore\n\n  useEffect(() => {\n    if (player.current) {\n      return () => {\n        removePlayer();\n      };\n    }\n\n    createPlayer();\n  }, [createPlayer, removePlayer]);\n  return _jsxDEV(Box, {\n    id: \"video-container\",\n    height: \"470px\",\n    width: \"800px\",\n    position: \"relative\",\n    border: `5px double ${blue[600]}`,\n    children: _jsxDEV(\"video\", {\n      ref: video,\n      className: \"video-js vjs-fluid vjs-big-play-centered\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AmazonIVSPlayer, \"Reh7fyIfUKXM1JE/Dm1uEbEPqo8=\");\n\n_c = AmazonIVSPlayer;\nexport default AmazonIVSPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AmazonIVSPlayer\");","map":{"version":3,"sources":["/home/user/Документы/Work/2023/training/apps/frontend/src/components/amazon-ivs-player/amazon-ivs-player.component.tsx"],"names":["React","useCallback","useEffect","useRef","registerIVSTech","registerIVSQualityPlugin","videojs","Box","blue","getAbsolutePath","playerOptions","wasmBinaryPath","wasmWorkerPath","AmazonIVSPlayer","playbackURL","video","player","createPlayer","current","path","wasmBinary","wasmWorker","ready","enableIVSQualityPlugin","src","removePlayer","dispose"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,WAApB,EAAiCC,SAAjC,EAA4CC,MAA5C,QAA0D,OAA1D;AACA,SACEC,eADF,EAEEC,wBAFF,QAKO,mBALP;AAMA,OAAOC,OAAP,MAAoB,UAApB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,OAAOC,eAAP,MAA4B,qCAA5B;AACA,SACEC,aADF,EAEEC,cAFF,EAGEC,cAHF,QAIO,6CAJP;AAMA,OAAO,4BAAP;;;AAGA,MAAMC,eAA0C,GAAG,CACjD;AAAEC,EAAAA;AAAF,CADiD,KAE9C;AAAA;;AACH,QAAMC,KAAK,GAAGZ,MAAM,CAA0B,IAA1B,CAApB;AACA,QAAMa,MAAM,GAAGb,MAAM,CAAgE,IAAhE,CAArB;AAEA,QAAMc,YAAY,GAAGhB,WAAW,CAAC,MAAM;AACrC,QAAI,CAACc,KAAK,CAACG,OAAX,EAAoB;AAClB;AACD;;AAED,UAAMC,IAAI,GAAGV,eAAe,CAACE,cAAD,CAA5B;AAEAP,IAAAA,eAAe,CAACE,OAAD,EAAU;AACvBc,MAAAA,UAAU,EAAEX,eAAe,CAACE,cAAD,CADJ;AAEvBU,MAAAA,UAAU,EAAEZ,eAAe,CAACG,cAAD;AAFJ,KAAV,CAAf;AAKAP,IAAAA,wBAAwB,CAACC,OAAD,CAAxB;AAEAU,IAAAA,MAAM,CAACE,OAAP,GAAiBZ,OAAO,CACtBS,KAAK,CAACG,OADgB,EAEtBR,aAFsB,CAAxB;AAKAM,IAAAA,MAAM,CAACE,OAAP,CAAeI,KAAf,CAAqB,MAAM;AAAA;;AACzB,yBAAAN,MAAM,CAACE,OAAP,qCAAgBK,sBAAhB;AACA,0BAAAP,MAAM,CAACE,OAAP,sCAAgBM,GAAhB,CAAoBV,WAApB;AACD,KAHD;AAID,GAvB+B,EAuB7B,CAACA,WAAD,CAvB6B,CAAhC;AAyBA,QAAMW,YAAY,GAAGxB,WAAW,CAAC,MAAM;AAAA;;AACrC,QAAI,CAACc,KAAK,CAACG,OAAX,EAAoB;AAClB;AACD;;AAED,wBAAAF,MAAM,CAACE,OAAP,sCAAgBQ,OAAhB;AAEAV,IAAAA,MAAM,CAACE,OAAP,GAAiB,IAAjB;AACD,GAR+B,EAQ7B,EAR6B,CAAhC,CA7BG,CAuCH;;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,MAAM,CAACE,OAAX,EAAoB;AAClB,aAAO,MAAM;AAAEO,QAAAA,YAAY;AAAK,OAAhC;AACD;;AAEDR,IAAAA,YAAY;AACb,GANQ,EAMN,CAACA,YAAD,EAAeQ,YAAf,CANM,CAAT;AAQA,SACE,QAAC,GAAD;AACE,IAAA,EAAE,EAAC,iBADL;AAEE,IAAA,MAAM,EAAC,OAFT;AAGE,IAAA,KAAK,EAAC,OAHR;AAIE,IAAA,QAAQ,EAAC,UAJX;AAKE,IAAA,MAAM,EAAG,cAAajB,IAAI,CAAC,GAAD,CAAM,EALlC;AAAA,cAOC;AACC,MAAA,GAAG,EAAEO,KADN;AAEG,MAAA,SAAS,EAAC;AAFb;AAAA;AAAA;AAAA;AAAA;AAPD;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAhED;;GAAMF,e;;KAAAA,e;AAkEN,eAAeA,eAAf","sourcesContent":["import React, { FC, useCallback, useEffect, useRef } from 'react';\nimport { \n  registerIVSTech, \n  registerIVSQualityPlugin,\n  VideoJSIVSTech,  \n  VideoJSQualityPlugin \n} from 'amazon-ivs-player';\nimport videojs from 'video.js';\nimport { Box } from '@mui/material';\nimport { blue } from '@mui/material/colors';\nimport getAbsolutePath from '../../utils/get-absolute-path.utils';\nimport { \n  playerOptions,\n  wasmBinaryPath, \n  wasmWorkerPath \n} from '../../constants/amazon-ivs-player.constants';\nimport { IAmazonIVSPlayerProps } from './amazon-ivs-player.types';\nimport 'video.js/dist/video-js.css';\n\n\nconst AmazonIVSPlayer: FC<IAmazonIVSPlayerProps> = (\n  { playbackURL }: IAmazonIVSPlayerProps\n) => {\n  const video = useRef<HTMLVideoElement | null>(null);\n  const player = useRef<videojs.Player & VideoJSIVSTech & VideoJSQualityPlugin | null>(null);\n\n  const createPlayer = useCallback(() => {\n    if (!video.current) {\n      return;\n    }\n\n    const path = getAbsolutePath(wasmBinaryPath);\n\n    registerIVSTech(videojs, {\n      wasmBinary: getAbsolutePath(wasmBinaryPath),\n      wasmWorker: getAbsolutePath(wasmWorkerPath)\n    });\n\n    registerIVSQualityPlugin(videojs);\n\n    player.current = videojs(\n      video.current,\n      playerOptions\n    ) as videojs.Player & VideoJSIVSTech & VideoJSQualityPlugin;\n\n    player.current.ready(() => {\n      player.current?.enableIVSQualityPlugin();\n      player.current?.src(playbackURL);\n    });\n  }, [playbackURL]);\n\n  const removePlayer = useCallback(() => {\n    if (!video.current) {\n      return;\n    }\n\n    player.current?.dispose();\n\n    player.current = null;\n  }, []);\n\n  // @ts-ignore\n  useEffect(() => {\n    if (player.current) {\n      return () => { removePlayer(); }\n    }\n\n    createPlayer();\n  }, [createPlayer, removePlayer]);\n\n  return (\n    <Box\n      id=\"video-container\" \n      height=\"470px\" \n      width=\"800px\" \n      position=\"relative\"\n      border={`5px double ${blue[600]}`}\n    >\n\t    <video\n\t\t    ref={video}\n        className=\"video-js vjs-fluid vjs-big-play-centered\"\n\t    />\n\t  </Box>\n  )\n};\n\nexport default AmazonIVSPlayer;"]},"metadata":{},"sourceType":"module"}