{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Work/2023/training/apps/frontend/src/components/update-channel-form/update-channel-form.component.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Box, Button, Dialog, DialogContent, DialogTitle, FormControl, FormHelperText, TextField } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { classValidatorResolver } from '@hookform/resolvers/class-validator';\nimport { ChannelDto } from '@boilerplate/shared';\nimport RouterSuspense from '../router-suspense/router-suspense.component';\nimport { useUpdateChannelMutation } from '@boilerplate/store';\nimport useShowError from '../../hooks/use-show-error.hooks';\nimport { cancelButtonStyle, closeIconStyle, confirmButtonStyle, dialogStyle, dialogContentStyle, errorStyle } from './update-channel-form.styles';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nconst resolver = classValidatorResolver(ChannelDto);\n\nconst UpdateChannelForm = ({\n  channelData,\n  enqueueSnackbar\n}) => {\n  _s();\n\n  var _errors$name;\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: channelData,\n    resolver\n  });\n  const [open, setOpen] = useState(true);\n  const closeHandler = useCallback(() => {\n    setOpen(false);\n  }, []);\n  const [updateChannel, {\n    isLoading,\n    error\n  }] = useUpdateChannelMutation();\n\n  const onConfirm = async e => {\n    e.preventDefault();\n    await handleSubmit(async value => {\n      try {\n        await updateChannel(value);\n        closeHandler();\n      } catch (e) {\n        console.error(e.message);\n      }\n    })();\n  };\n\n  useShowError({\n    error,\n    enqueueSnackbar\n  });\n  return _jsxDEV(Dialog, {\n    open: open,\n    maxWidth: \"sm\",\n    keepMounted: true,\n    onClose: closeHandler,\n    \"aria-describedby\": \"alert-dialog-slide-description\",\n    sx: dialogStyle,\n    children: [isLoading && _jsxDEV(Box, {\n      width: \"100%\",\n      position: \"absolute\",\n      height: \"100%\",\n      top: 0,\n      left: 0,\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      zIndex: 999,\n      bgcolor: \"#fff\",\n      sx: {\n        opacity: '0.7'\n      },\n      children: _jsxDEV(RouterSuspense, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), _jsxDEV(Box, {\n      m: \"22px 10px 10px\",\n      boxSizing: \"border-box\",\n      width: \"350px\",\n      children: [_jsxDEV(DialogTitle, {\n        children: \"Update Channel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), _jsxDEV(DialogContent, {\n        sx: dialogContentStyle,\n        children: [_jsxDEV(CloseIcon, {\n          sx: closeIconStyle,\n          onClick: closeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), _jsxDEV(\"form\", {\n          onSubmit: async e => {\n            await onConfirm(e);\n          },\n          children: [_jsxDEV(FormControl, {\n            fullWidth: true,\n            sx: {\n              mb: 3\n            },\n            children: [_jsxDEV(TextField, Object.assign({\n              required: true,\n              autoComplete: \"current-name\",\n              autoFocus: true,\n              error: !!errors.name,\n              \"aria-describedby\": \"component-error-name\"\n            }, register('name')), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 9\n            }, this), _jsxDEV(FormHelperText, {\n              error: true,\n              id: \"component-error-name\",\n              sx: errorStyle,\n              children: (_errors$name = errors.name) == null ? void 0 : _errors$name.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), _jsxDEV(Box, {\n            mt: 3,\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            children: [_jsxDEV(Button, {\n              variant: \"text\",\n              sx: cancelButtonStyle,\n              onClick: closeHandler,\n              children: \"CANCEL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), _jsxDEV(Button, {\n              variant: \"text\",\n              sx: confirmButtonStyle,\n              type: \"submit\",\n              children: \"CONFIRM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateChannelForm, \"/5VRM5ki57XGfdIuYU2A6793D1M=\", false, function () {\n  return [useForm, useUpdateChannelMutation, useShowError];\n});\n\n_c = UpdateChannelForm;\nexport default UpdateChannelForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateChannelForm\");","map":{"version":3,"sources":["/home/user/Документы/Work/2023/training/apps/frontend/src/components/update-channel-form/update-channel-form.component.tsx"],"names":["React","useCallback","useState","useForm","Box","Button","Dialog","DialogContent","DialogTitle","FormControl","FormHelperText","TextField","CloseIcon","classValidatorResolver","ChannelDto","RouterSuspense","useUpdateChannelMutation","useShowError","cancelButtonStyle","closeIconStyle","confirmButtonStyle","dialogStyle","dialogContentStyle","errorStyle","resolver","UpdateChannelForm","channelData","enqueueSnackbar","register","handleSubmit","formState","errors","defaultValues","open","setOpen","closeHandler","updateChannel","isLoading","error","onConfirm","e","preventDefault","value","console","message","opacity","mb","name"],"mappings":"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","sourcesContent":["import React, { FC, useCallback, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  FormHelperText,\n  TextField\n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { classValidatorResolver } from '@hookform/resolvers/class-validator';\nimport { ChannelDto } from '@boilerplate/shared';\nimport RouterSuspense from '../router-suspense/router-suspense.component';\nimport {\n  useUpdateChannelMutation\n} from '@boilerplate/store';\nimport useShowError from '../../hooks/use-show-error.hooks';\nimport { IUpdateChannelFormProps } from './update-channel-form.types';\nimport {\n  cancelButtonStyle,\n  closeIconStyle,\n  confirmButtonStyle,\n  dialogStyle,\n  dialogContentStyle,\n  errorStyle\n} from './update-channel-form.styles';\n\n\nconst resolver = classValidatorResolver(ChannelDto);\n\nconst UpdateChannelForm: FC<IUpdateChannelFormProps> = (\n  { channelData, enqueueSnackbar }: IUpdateChannelFormProps\n) => {\n  const { \n    register, \n    handleSubmit, \n    formState: { errors } \n  } = useForm<ChannelDto>({defaultValues: channelData, resolver });\n\n\tconst [open, setOpen] = useState<boolean>(true);\n\n\tconst closeHandler = useCallback(() => {\n\t\tsetOpen(false);\n\t}, []);\n\n  const [updateChannel, { isLoading, error }] = useUpdateChannelMutation();\n\n  const onConfirm = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {\n    e.preventDefault();\n\n    await handleSubmit(\n      async (value) => {\n        try {\n          await updateChannel(value);\n\n          closeHandler();\n        } catch (e: any) {\n          console.error(e.message);\n        }\n      }\n    )();\n  };\n\n  useShowError({ error, enqueueSnackbar });\n\n  return (\n    <Dialog\n      open={open}\n      maxWidth=\"sm\"\n      keepMounted\n      onClose={closeHandler}\n      aria-describedby=\"alert-dialog-slide-description\"\n      sx={dialogStyle}\n    >\n      {isLoading && (\n        <Box \n          width=\"100%\" \n          position=\"absolute\" \n          height=\"100%\" \n          top={0} \n          left={0}\n          display=\"flex\"\n          flexDirection=\"column\" \n          justifyContent=\"center\" \n          alignItems=\"center\" \n          zIndex={999} \n          bgcolor=\"#fff\"\n          sx={{opacity: '0.7'}}\n        >\n          <RouterSuspense />\n        </Box>\n      )}\n      <Box \n        m=\"22px 10px 10px\" \n        boxSizing=\"border-box\" \n        width=\"350px\"\n      >\n        <DialogTitle>\n          Update Channel\n        </DialogTitle>\n        <DialogContent sx={dialogContentStyle}>\n          <CloseIcon sx={closeIconStyle} onClick={closeHandler} />\n          <form onSubmit={async (e) => { await onConfirm(e); }}>\n            <FormControl fullWidth sx={{ mb: 3 }}>\n\t\t\t\t\t\t  <TextField\n\t\t\t\t\t\t\t  required\n\t\t\t\t\t\t\t  autoComplete=\"current-name\"\n                autoFocus\n                error={!!errors.name}\n\t\t\t\t\t\t\t  aria-describedby=\"component-error-name\"\n\t\t\t\t\t\t\t  {...register('name')}\n\t\t\t\t\t\t  />\n\t\t\t\t\t\t  <FormHelperText error id=\"component-error-name\" sx={errorStyle}>\n\t\t\t\t\t\t\t  {errors.name?.message}\n\t\t\t\t\t\t  </FormHelperText>\n\t\t\t\t\t  </FormControl>\n            <Box mt={3} display=\"flex\" justifyContent=\"flex-end\">\n              <Button\n                variant=\"text\"\n                sx={cancelButtonStyle}\n                onClick={closeHandler}\n              >\n                CANCEL\n              </Button>\n              <Button\n                variant=\"text\"\n                sx={confirmButtonStyle}\n                type=\"submit\"\n              >\n                CONFIRM\n              </Button>\n            </Box>\n          </form>\n        </DialogContent>\n      </Box>\n    </Dialog>\n  );\n}\n\nexport default UpdateChannelForm;\n"]},"metadata":{},"sourceType":"module"}