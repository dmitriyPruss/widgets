{"ast":null,"code":"import { io } from 'socket.io-client';\nimport { SocketEnum } from '@boilerplate/shared';\nexport default class SocketClient {\n  constructor() {\n    this.socket = void 0;\n    this.baseUrl = void 0;\n    this.baseUrl = 'http://localhost:3000/api';\n  }\n\n  connect(token) {\n    if (!token || !this.baseUrl) {\n      return;\n    }\n\n    if (this.socket) {\n      this.disconnect();\n    }\n\n    this.socket = io(this.baseUrl, {\n      query: {\n        token\n      },\n      transports: ['websocket', 'polling'],\n      reconnection: true,\n      reconnectionDelay: 7000\n    });\n    this.socket.connect();\n    console.log('Front Socket is connected');\n  }\n\n  disconnect() {\n    var _this$socket;\n\n    if ((_this$socket = this.socket) != null && _this$socket.active) {\n      this.socket.disconnect();\n    }\n\n    this.socket = null;\n    console.log('Front Socket is disconnected');\n  } // Widgets\n\n\n  joinWidgets(id) {\n    var _this$socket2;\n\n    (_this$socket2 = this.socket) == null ? void 0 : _this$socket2.emit(SocketEnum.JoinWidgets, {\n      id\n    });\n    console.log('Frontend Join widgets');\n  }\n\n  leftWidgets(id) {\n    var _this$socket3;\n\n    (_this$socket3 = this.socket) == null ? void 0 : _this$socket3.emit(SocketEnum.LeftWidgets, {\n      id\n    });\n    console.log('Frontend Left widgets');\n  }\n\n  emitWidgets(id, widgets) {\n    var _this$socket4;\n\n    (_this$socket4 = this.socket) == null ? void 0 : _this$socket4.emit(SocketEnum.ReceivedWidgets, widgets);\n    console.log('Subscribe widgets');\n  } // Visible Widgets\n\n\n  joinVisibleWidgets(id) {\n    var _this$socket5;\n\n    (_this$socket5 = this.socket) == null ? void 0 : _this$socket5.emit(SocketEnum.JoinVisibleWidgets, {\n      id\n    });\n    console.log('Join visible widgets');\n  }\n\n  leftVisibleWidgets(id) {\n    var _this$socket6;\n\n    (_this$socket6 = this.socket) == null ? void 0 : _this$socket6.emit(SocketEnum.LeftVisibleWidgets, {\n      id\n    });\n    console.log('Left visible widgets');\n  }\n\n  emitWidgetIds(id, ids) {\n    var _this$socket7;\n\n    // this.socket?.on(`${SocketEnum.ReceivedVisibleWidgets}_${id}`, handler);\n    (_this$socket7 = this.socket) == null ? void 0 : _this$socket7.emit(SocketEnum.ReceivedVisibleWidgets, ids);\n    console.log('emit widgets ids - ', ids);\n  }\n\n  joinBuyingWidgets(id) {\n    var _this$socket8;\n\n    (_this$socket8 = this.socket) == null ? void 0 : _this$socket8.emit(SocketEnum.JoinPurchasedWidgets, {\n      id\n    });\n    console.log('Join buy widgets');\n  }\n\n  leftBuyingWidgets(id) {\n    var _this$socket9;\n\n    (_this$socket9 = this.socket) == null ? void 0 : _this$socket9.emit(SocketEnum.LeftPurchasedWidgets, {\n      id\n    });\n    console.log('Left buy widgets');\n  }\n\n  subscribeOnPurchasediWidget(id, handler) {\n    var _this$socket10;\n\n    (_this$socket10 = this.socket) == null ? void 0 : _this$socket10.on(`${SocketEnum.PurchasedWidget}_${id}`, handler);\n    console.log('Subscribe purchased widgets');\n  }\n\n  unsubscribeOnPurchasedWidget(id) {\n    var _this$socket11;\n\n    (_this$socket11 = this.socket) == null ? void 0 : _this$socket11.off(`${SocketEnum.PurchasedWidget}_${id}`);\n    console.log('Unsubscribe purchased widgets');\n  }\n\n}","map":{"version":3,"sources":["/home/user/Документы/Work/2023/training/apps/frontend/src/socket/client.socket.ts"],"names":["io","SocketEnum","SocketClient","constructor","socket","baseUrl","connect","token","disconnect","query","transports","reconnection","reconnectionDelay","console","log","active","joinWidgets","id","emit","JoinWidgets","leftWidgets","LeftWidgets","emitWidgets","widgets","ReceivedWidgets","joinVisibleWidgets","JoinVisibleWidgets","leftVisibleWidgets","LeftVisibleWidgets","emitWidgetIds","ids","ReceivedVisibleWidgets","joinBuyingWidgets","JoinPurchasedWidgets","leftBuyingWidgets","LeftPurchasedWidgets","subscribeOnPurchasediWidget","handler","on","PurchasedWidget","unsubscribeOnPurchasedWidget","off"],"mappings":"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","sourcesContent":["import { Socket, io } from 'socket.io-client';\nimport { SocketEnum, WidgetDto } from '@boilerplate/shared';\n\n\nexport default class SocketClient {\n  private socket: Socket | null;\n  private readonly baseUrl: string;\n\n  constructor() {\n\tthis.baseUrl = 'http://localhost:3000/api';\n  }\n\n  public connect(token: string) {\n\tif (!token || !this.baseUrl) {\n\t  return;\n\t}\n\n\tif (this.socket) {\n\t  this.disconnect();\n\t}\n\n\tthis.socket = io(this.baseUrl, {\n\t  query: { \n\t\ttoken\n\t  },\n\t  transports: ['websocket', 'polling'],\n\t  reconnection: true,\n\t  reconnectionDelay: 7000\n\t});\n\n\tthis.socket.connect();\n\n\tconsole.log('Front Socket is connected');\n  }\n\n  public disconnect() {\n\tif (this.socket?.active) {\n\t  this.socket.disconnect();\n\t}\n\n\tthis.socket = null;\n\t\t\n\tconsole.log('Front Socket is disconnected');\n  }\n\n\n  // Widgets\n  public joinWidgets(id: string) {\n\tthis.socket?.emit(SocketEnum.JoinWidgets, { id });\n\n\tconsole.log('Frontend Join widgets');\n  }\n\n  public leftWidgets(id: string) {\n\tthis.socket?.emit(SocketEnum.LeftWidgets, { id });\n\n\tconsole.log('Frontend Left widgets');\n  }\n\n  public emitWidgets(id: string, widgets: WidgetDto[]): void {\n\tthis.socket?.emit(SocketEnum.ReceivedWidgets, widgets);\n\n\tconsole.log('Subscribe widgets');\n  }\n\n    // Visible Widgets\n\tpublic joinVisibleWidgets(id: string) {\n\t\tthis.socket?.emit(SocketEnum.JoinVisibleWidgets, { id });\n\t\n\t\tconsole.log('Join visible widgets');\n\t  }\n\t\n\t  public leftVisibleWidgets(id: string) {\n\t\tthis.socket?.emit(SocketEnum.LeftVisibleWidgets, { id });\n\t\n\t\tconsole.log('Left visible widgets');\n\t  }\n\t\n\t  public emitWidgetIds(id: string, ids: string[]): void {\n\t\t// this.socket?.on(`${SocketEnum.ReceivedVisibleWidgets}_${id}`, handler);\n\n\t\tthis.socket?.emit(SocketEnum.ReceivedVisibleWidgets, ids);\n\n\t\tconsole.log('emit widgets ids - ', ids);\n\t\n\t  }\n\n\t  public joinBuyingWidgets(id: string) {\n\t\tthis.socket?.emit(SocketEnum.JoinPurchasedWidgets, { id });\n\t\n\t\tconsole.log('Join buy widgets');\n\t  }\n\t\n\t  public leftBuyingWidgets(id: string) {\n\t\tthis.socket?.emit(SocketEnum.LeftPurchasedWidgets, { id });\n\t\n\t\tconsole.log('Left buy widgets');\n\t  }\n\n\t  public subscribeOnPurchasediWidget(id: string, handler: (data: WidgetDto) => void): void {\n\t\tthis.socket?.on(`${SocketEnum.PurchasedWidget}_${id}`, handler);\n\t\n\t\tconsole.log('Subscribe purchased widgets');\n\t  }\n\t\n\t  public unsubscribeOnPurchasedWidget(id: string): void {\n\t\tthis.socket?.off(`${SocketEnum.PurchasedWidget}_${id}`);\n\t\n\t\tconsole.log('Unsubscribe purchased widgets');\n\t  }\n}\n"]},"metadata":{},"sourceType":"module"}