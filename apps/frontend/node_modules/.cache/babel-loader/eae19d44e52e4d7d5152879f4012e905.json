{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport LocalStorageService from '../services/local-storage.service';\nconst localStorageService = new LocalStorageService();\nconst initialState = {\n  token: null,\n  isAuthenticated: false\n};\nexport const authSlice = createSlice({\n  name: 'authReducer',\n  initialState,\n  reducers: {\n    logout: state => {\n      localStorageService.clearToken(state);\n    },\n    setToken: (state, action) => {\n      localStorageService.setToken(state, action.payload);\n    }\n  }\n});\nexport const {\n  logout,\n  setToken\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"sources":["/home/user/Документы/Work/2023/training/libs/store/src/rtk-store/reducers/auth.slice.ts"],"names":["createSlice","LocalStorageService","localStorageService","initialState","token","isAuthenticated","authSlice","name","reducers","logout","state","clearToken","setToken","action","payload","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;AAEA,MAAMC,mBAAmB,GAAG,IAAID,mBAAJ,EAA5B;AAOA,MAAME,YAAuB,GAAG;AAC9BC,EAAAA,KAAK,EAAE,IADuB;AAE9BC,EAAAA,eAAe,EAAE;AAFa,CAAhC;AAKA,OAAO,MAAMC,SAAS,GAAGN,WAAW,CAAC;AACnCO,EAAAA,IAAI,EAAE,aAD6B;AAEnCJ,EAAAA,YAFmC;AAGnCK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAGC,KAAD,IAAsB;AAC5BR,MAAAA,mBAAmB,CAACS,UAApB,CAA+BD,KAA/B;AACD,KAHO;AAIRE,IAAAA,QAAQ,EAAE,CAACF,KAAD,EAAmBG,MAAnB,KAAkE;AAC1EX,MAAAA,mBAAmB,CAACU,QAApB,CAA6BF,KAA7B,EAAoCG,MAAM,CAACC,OAA3C;AACD;AANO;AAHyB,CAAD,CAA7B;AAaP,OAAO,MAAM;AAAEL,EAAAA,MAAF;AAAUG,EAAAA;AAAV,IAAuBN,SAAS,CAACS,OAAvC;AAEP,eAAeT,SAAS,CAACU,OAAzB","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport LocalStorageService from '../services/local-storage.service';\n\nconst localStorageService = new LocalStorageService();\n\nexport interface AuthState {\n  token: string | null,\n  isAuthenticated: boolean\n}\n\nconst initialState: AuthState = {\n  token: null,\n  isAuthenticated: false \n}\n\nexport const authSlice = createSlice({\n  name: 'authReducer',\n  initialState,\n  reducers: {\n    logout: (state: AuthState) => { \n      localStorageService.clearToken(state);\n    },\n    setToken: (state: AuthState, action: PayloadAction<string | null>): void => {\n      localStorageService.setToken(state, action.payload);\n    }\n  }\n});\n\nexport const { logout, setToken } = authSlice.actions;\n\nexport default authSlice.reducer;"]},"metadata":{},"sourceType":"module"}