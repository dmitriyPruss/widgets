{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Work/2023/training/apps/frontend/src/components/channel-details/channel-details.component.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport { Box, Button, Dialog, DialogContent, DialogTitle, Typography } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport RouterSuspense from '../router-suspense/router-suspense.component';\nimport { useGetChannelByIdQuery } from '@boilerplate/store';\nimport useShowError from '../../hooks/use-show-error.hooks';\nimport { closeIconStyle, dialogStyle, dialogContentStyle } from './channel-details.styles';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n\nconst ChannelDetails = ({\n  id,\n  enqueueSnackbar\n}) => {\n  _s();\n\n  const [open, setOpen] = useState(true);\n  const closeHandler = useCallback(() => {\n    setOpen(false);\n  }, []);\n  const {\n    data,\n    isLoading,\n    error\n  } = useGetChannelByIdQuery(id);\n  const copyData = useCallback((textData, message) => {\n    navigator.clipboard.writeText(textData).then(() => {\n      enqueueSnackbar(message, {\n        variant: 'success'\n      });\n    });\n  }, [enqueueSnackbar]);\n  const streamKey = (data == null ? void 0 : data.key) || '';\n  const ingestEndpoint = (data == null ? void 0 : data.ingestEndpoint) || '';\n  useShowError({\n    error,\n    enqueueSnackbar\n  });\n  return _jsxDEV(Dialog, {\n    open: open,\n    maxWidth: \"md\",\n    keepMounted: true,\n    onClose: closeHandler,\n    \"aria-describedby\": \"alert-dialog-slide-description\",\n    sx: dialogStyle,\n    children: [isLoading && _jsxDEV(Box, {\n      width: \"100%\",\n      position: \"absolute\",\n      height: \"100%\",\n      top: 0,\n      left: 0,\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      zIndex: 999,\n      bgcolor: \"#fff\",\n      sx: {\n        opacity: '0.7'\n      },\n      children: _jsxDEV(RouterSuspense, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), _jsxDEV(Box, {\n      m: 1.2,\n      boxSizing: \"border-box\",\n      position: \"relative\",\n      width: \"650px\",\n      children: [_jsxDEV(DialogTitle, {\n        sx: {\n          fontSize: '24px'\n        },\n        children: \"Channel Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), _jsxDEV(DialogContent, {\n        sx: dialogContentStyle,\n        children: [_jsxDEV(CloseIcon, {\n          sx: closeIconStyle,\n          onClick: closeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), _jsxDEV(Box, {\n          children: [_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Stream Key:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), _jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            children: [_jsxDEV(Typography, {\n              fontSize: \"14px\",\n              children: data == null ? void 0 : data.key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), _jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => {\n                copyData(streamKey, 'Stream key copied');\n              },\n              children: \"COPY\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), _jsxDEV(Box, {\n          children: [_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Ingest Server:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), _jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            children: [_jsxDEV(Typography, {\n              fontSize: \"14px\",\n              children: data == null ? void 0 : data.ingestEndpoint\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), _jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => {\n                copyData(ingestEndpoint, 'Ingest server copied');\n              },\n              children: \"COPY\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChannelDetails, \"/9KliWUePBdEoZYvSLmZyKj2PBA=\", false, function () {\n  return [useGetChannelByIdQuery, useShowError];\n});\n\n_c = ChannelDetails;\nexport default ChannelDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChannelDetails\");","map":{"version":3,"sources":["/home/user/Документы/Work/2023/training/apps/frontend/src/components/channel-details/channel-details.component.tsx"],"names":["React","useCallback","useState","Box","Button","Dialog","DialogContent","DialogTitle","Typography","CloseIcon","RouterSuspense","useGetChannelByIdQuery","useShowError","closeIconStyle","dialogStyle","dialogContentStyle","ChannelDetails","id","enqueueSnackbar","open","setOpen","closeHandler","data","isLoading","error","copyData","textData","message","navigator","clipboard","writeText","then","variant","streamKey","key","ingestEndpoint","opacity","fontSize"],"mappings":"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","sourcesContent":["import React, { FC, useCallback, useState } from 'react';\nimport { \n  Box, \n  Button, \n  Dialog, \n  DialogContent, \n  DialogTitle,\n  Typography  \n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport RouterSuspense from '../router-suspense/router-suspense.component';\nimport { useGetChannelByIdQuery } from '@boilerplate/store';\nimport useShowError from '../../hooks/use-show-error.hooks';\nimport { IChannelDetailsProps } from './channel-details.types';\nimport { \n  closeIconStyle,\n  dialogStyle, \n  dialogContentStyle\n} from './channel-details.styles';\n\n\nconst ChannelDetails: FC<IChannelDetailsProps> = (\n  { id, enqueueSnackbar }: IChannelDetailsProps\n) => {\n  const [open, setOpen] = useState<boolean>(true);\n\n  const closeHandler = useCallback(() => {\n\t  setOpen(false);\n  }, []);\n\n  const { data, isLoading, error } = useGetChannelByIdQuery(id);\n\n  const copyData = useCallback((textData: string, message: string) => {\n    navigator.clipboard.writeText(textData).then(() => {\n      enqueueSnackbar(message, { variant: 'success' });\n    });\n  }, [enqueueSnackbar]);\n\n  const streamKey = data?.key || '';\n  const ingestEndpoint = data?.ingestEndpoint || ''; \n\n  useShowError({ error, enqueueSnackbar });\n   \n  return (\n    <Dialog\n      open={open}\n      maxWidth=\"md\"\n      keepMounted\n      onClose={closeHandler}\n      aria-describedby=\"alert-dialog-slide-description\"\n      sx={dialogStyle}\n    >\n      {isLoading && (\n        <Box \n          width=\"100%\" \n          position=\"absolute\" \n          height=\"100%\" \n          top={0} \n          left={0}\n          display=\"flex\"\n          flexDirection=\"column\" \n          justifyContent=\"center\" \n          alignItems=\"center\" \n          zIndex={999} \n          bgcolor=\"#fff\"\n          sx={{opacity: '0.7'}}\n        >\n          <RouterSuspense />\n        </Box>\n      )} \n      <Box m={1.2} boxSizing=\"border-box\" position=\"relative\" width=\"650px\">       \n        <DialogTitle sx={{fontSize: '24px'}}>\n          Channel Details\n        </DialogTitle>\n        <DialogContent sx={dialogContentStyle}>\n          <CloseIcon sx={closeIconStyle} onClick={closeHandler} />\n          <Box>\n            <Typography variant=\"h6\">Stream Key:</Typography>\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n              <Typography fontSize=\"14px\">{data?.key}</Typography> \n              <Button\n                variant=\"contained\"\n                onClick={() => { copyData(streamKey, 'Stream key copied'); }}\n              >\n                COPY\n              </Button>   \n            </Box> \n          </Box>\n          <Box>  \n            <Typography variant=\"h6\">Ingest Server:</Typography>\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n              <Typography fontSize=\"14px\">{data?.ingestEndpoint}</Typography>\n              <Button\n                variant=\"contained\"\n                onClick={() => { copyData(ingestEndpoint, 'Ingest server copied'); }}\n              >\n                COPY\n              </Button>    \n            </Box>       \n          </Box> \n        </DialogContent>\n      </Box>\n    </Dialog>\n  );\n}\n\nexport default ChannelDetails;"]},"metadata":{},"sourceType":"module"}