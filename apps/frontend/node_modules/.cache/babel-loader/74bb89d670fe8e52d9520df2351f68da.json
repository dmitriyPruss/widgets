{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Work/2023/training/apps/frontend/src/components/widget-row/widget-row.component.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { omit } from 'lodash';\nimport { Box, TableCell, TableRow } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { useModal } from 'mui-modal-provider';\nimport UpdateWidgetForm from '../update-widget-form/update-widget-form.component';\nimport { useDeleteWidgetMutation } from '@boilerplate/store';\nimport { cellStyle, iconStyle, widgetRowStyle } from './widget-row.styles';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n\nconst WidgetRow = ({\n  row,\n  enqueueSnackbar\n}) => {\n  _s();\n\n  const widgetData = useMemo(() => omit(row, ['channelId', 'createdAt', 'updatedAt']), [row]);\n  const {\n    id\n  } = useParams();\n  const [deleteWidget] = useDeleteWidgetMutation();\n  const {\n    showModal\n  } = useModal();\n  const openUpdateWidgetForm = useCallback(() => row != null && row.id ? showModal(UpdateWidgetForm, {\n    id: row == null ? void 0 : row.id,\n    widgetData,\n    enqueueSnackbar\n  }) : null, [row == null ? void 0 : row.id, widgetData, showModal, enqueueSnackbar]);\n\n  const deleteWidgetRow = async () => {\n    try {\n      if (!id) {\n        return;\n      }\n\n      await deleteWidget({\n        channelId: id,\n        widgetId: widgetData['id']\n      });\n    } catch (e) {\n      console.error(e.message);\n    }\n  };\n\n  return _jsxDEV(TableRow, {\n    sx: widgetRowStyle,\n    children: [Object.keys(widgetData).map(key => _jsxDEV(TableCell, {\n      sx: cellStyle,\n      children: _jsxDEV(Box, {\n        width: \"180px\",\n        sx: {\n          overflowWrap: 'break-word'\n        },\n        children: widgetData[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }, this)), _jsxDEV(TableCell, {\n      sx: iconStyle,\n      children: _jsxDEV(EditIcon, {\n        sx: {\n          color: 'blue'\n        },\n        onClick: openUpdateWidgetForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), _jsxDEV(TableCell, {\n      sx: iconStyle,\n      children: _jsxDEV(DeleteIcon, {\n        sx: {\n          color: 'red'\n        },\n        onClick: deleteWidgetRow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 2\n  }, this);\n};\n\n_s(WidgetRow, \"jBkQUiCXh7vNIGuTRVY7NFaD8cg=\", false, function () {\n  return [useParams, useDeleteWidgetMutation, useModal];\n});\n\n_c = WidgetRow;\nexport default WidgetRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"WidgetRow\");","map":{"version":3,"sources":["/home/user/Документы/Work/2023/training/apps/frontend/src/components/widget-row/widget-row.component.tsx"],"names":["React","useCallback","useMemo","useParams","omit","Box","TableCell","TableRow","DeleteIcon","EditIcon","useModal","UpdateWidgetForm","useDeleteWidgetMutation","cellStyle","iconStyle","widgetRowStyle","WidgetRow","row","enqueueSnackbar","widgetData","id","deleteWidget","showModal","openUpdateWidgetForm","deleteWidgetRow","channelId","widgetId","e","console","error","message","Object","keys","map","key","overflowWrap","color"],"mappings":"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","sourcesContent":["import React, { FC, useCallback, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { omit } from 'lodash';\nimport { Box, TableCell, TableRow } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { useModal } from 'mui-modal-provider';\nimport UpdateWidgetForm from \n  '../update-widget-form/update-widget-form.component';\nimport { useDeleteWidgetMutation } from '@boilerplate/store';\nimport { IWidgetRow, IWidgetData } from './widget-row.types';\nimport {  \n  cellStyle,\n  iconStyle,\n  widgetRowStyle \n} from './widget-row.styles';\n\n\nconst WidgetRow: FC<IWidgetRow> = ({ row, enqueueSnackbar }: IWidgetRow) => {\n  const widgetData: IWidgetData = useMemo(\n    () => omit(row, ['channelId', 'createdAt', 'updatedAt']), [row]);\n\n  const { id } = useParams();\n\n  const [deleteWidget] = useDeleteWidgetMutation();\n\n  const { showModal } = useModal();\n\n  const openUpdateWidgetForm = useCallback(() => \n\t  row?.id \n      ? showModal(UpdateWidgetForm, { id: row?.id, widgetData, enqueueSnackbar }) \n      : null, \n    [row?.id, widgetData, showModal, enqueueSnackbar]\n  );\n\n  const deleteWidgetRow = async () => {\n\t  try {\n      if (!id) {\n        return;\n      }\n\n\t    await deleteWidget({\n\t\t    channelId: id, \n\t\t    widgetId: widgetData['id'] as string\n\t    });\n    } catch (e: any) {\n      console.error(e.message);\n    }\n  }\n\n  return (\n\t<TableRow\n\t  sx={widgetRowStyle}\n\t>\n\t  {Object.keys(widgetData).map((key: string) => (\n\t\t<TableCell key={key} sx={cellStyle}>\n      <Box \n        width=\"180px\" \n        sx={{overflowWrap: 'break-word'}}\n      >\n        {widgetData[key]}\n      </Box>\n\t\t</TableCell>\n\t  ))}\n    <TableCell sx={iconStyle}>\n\t\t  <EditIcon sx={{ color: 'blue' }} onClick={openUpdateWidgetForm} />\n\t  </TableCell>\n    <TableCell sx={iconStyle}>\n      <DeleteIcon sx={{ color: 'red' }} onClick={deleteWidgetRow} />\n    </TableCell>\n\t</TableRow>\n  );\n}\n\nexport default WidgetRow;\n"]},"metadata":{},"sourceType":"module"}